///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///

class PromoCodesModelPromoCodesTheme {
/*
{
  "template": "offer-tile-green"
} 
*/

  String? template;

  PromoCodesModelPromoCodesTheme({
    this.template,
  });
  PromoCodesModelPromoCodesTheme.fromJson(Map<String, dynamic> json) {
    template = json['template']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['template'] = template;
    return data;
  }
}

class PromoCodesModelPromoCodesUses {
/*
{
  "max": 1000,
  "maxDaily": 100,
  "perUser": 0,
  "current": 0
} 
*/

  int? max;
  int? maxDaily;
  int? perUser;
  int? current;

  PromoCodesModelPromoCodesUses({
    this.max,
    this.maxDaily,
    this.perUser,
    this.current,
  });
  PromoCodesModelPromoCodesUses.fromJson(Map<String, dynamic> json) {
    max = json['max']?.toInt();
    maxDaily = json['maxDaily']?.toInt();
    perUser = json['perUser']?.toInt();
    current = json['current']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['max'] = max;
    data['maxDaily'] = maxDaily;
    data['perUser'] = perUser;
    data['current'] = current;
    return data;
  }
}

class PromoCodesModelPromoCodesValidity {
/*
{
  "startDate": 1672531200000,
  "endDate": 1673740800000
} 
*/

  int? startDate;
  int? endDate;

  PromoCodesModelPromoCodesValidity({
    this.startDate,
    this.endDate,
  });
  PromoCodesModelPromoCodesValidity.fromJson(Map<String, dynamic> json) {
    startDate = json['startDate']?.toInt();
    endDate = json['endDate']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['startDate'] = startDate;
    data['endDate'] = endDate;
    return data;
  }
}

class PromoCodesModelPromoCodesOfferDetails {
/*
{
  "referenceId": "93ba08d0-6bec-11ed-8ffd-8541705c9e6f",
  "isPercentage": true,
  "discount": 10
} 
*/

  String? referenceId;
  bool? isPercentage;
  double? discount;

  PromoCodesModelPromoCodesOfferDetails({
    this.referenceId,
    this.isPercentage,
    this.discount,
  });
  PromoCodesModelPromoCodesOfferDetails.fromJson(Map<String, dynamic> json) {
    referenceId = json['referenceId']?.toString();
    isPercentage = json['isPercentage'];
    discount = json['discount']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['referenceId'] = referenceId;
    data['isPercentage'] = isPercentage;
    data['discount'] = discount;
    return data;
  }
}

class PromoCodesModelPromoCodes {
/*
{
  "promoCodeId": "7c488720-8dad-11ed-8874-d9f01db01365",
  "promoCodeName": "Happy New Year 2023",
  "title": "Happy New Year",
  "subTitle": "Get a special 10% discount on subscriptions on new year",
  "promoCode": "HAPPYNEWYEAR",
  "desc": [
    "kne"
  ],
  "tnc": [
    "djd"
  ],
  "offerOn": "SUBSCRIPTION",
  "offerDetails": [
    {
      "referenceId": "93ba08d0-6bec-11ed-8ffd-8541705c9e6f",
      "isPercentage": true,
      "discount": 10
    }
  ],
  "validity": {
    "startDate": 1672531200000,
    "endDate": 1673740800000
  },
  "uses": {
    "max": 1000,
    "maxDaily": 100,
    "perUser": 0,
    "current": 0
  },
  "theme": {
    "template": "offer-tile-green"
  },
  "priority": 0
} 
*/

  String? promoCodeId;
  String? promoCodeName;
  String? title;
  String? subTitle;
  String? promoCode;
  List<String?>? desc;
  List<String?>? tnc;
  String? offerOn;
  List<PromoCodesModelPromoCodesOfferDetails?>? offerDetails;

  String? accessType;
  String? appUserCouponId;
  String? appRedeemId;
  int? expiresOn;

  PromoCodesModelPromoCodesValidity? validity;
  PromoCodesModelPromoCodesUses? uses;
  PromoCodesModelPromoCodesTheme? theme;
  int? priority;

  PromoCodesModelPromoCodes({
    this.promoCodeId,
    this.promoCodeName,
    this.title,
    this.subTitle,
    this.promoCode,
    this.desc,
    this.tnc,
    this.offerOn,
    this.offerDetails,
    this.validity,
    this.uses,
    this.theme,
    this.priority,
  });
  PromoCodesModelPromoCodes.fromJson(Map<String, dynamic> json) {
    promoCodeId = json['promoCodeId']?.toString();
    promoCodeName = json['promoCodeName']?.toString();
    title = json['title']?.toString();
    subTitle = json['subTitle']?.toString();
    promoCode = json['promoCode']?.toString();
    if (json['desc'] != null) {
      final v = json['desc'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      desc = arr0;
    }
    if (json['tnc'] != null) {
      final v = json['tnc'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      tnc = arr0;
    }
    offerOn = json['offerOn']?.toString();
    if (json['offerDetails'] != null) {
      final v = json['offerDetails'];
      final arr0 = <PromoCodesModelPromoCodesOfferDetails>[];
      v.forEach((v) {
        arr0.add(PromoCodesModelPromoCodesOfferDetails.fromJson(v));
      });
      offerDetails = arr0;
    }

    accessType = json['accessType']?.toString();
    appUserCouponId = json['appUserCouponId']?.toString();
    appRedeemId = json['appRedeemId']?.toString();
    expiresOn = json['expiresOn']?.toInt();

    validity = (json['validity'] != null)
        ? PromoCodesModelPromoCodesValidity.fromJson(json['validity'])
        : null;
    uses = (json['uses'] != null)
        ? PromoCodesModelPromoCodesUses.fromJson(json['uses'])
        : null;
    theme = (json['theme'] != null)
        ? PromoCodesModelPromoCodesTheme.fromJson(json['theme'])
        : null;
    priority = json['priority']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['promoCodeId'] = promoCodeId;
    data['promoCodeName'] = promoCodeName;
    data['title'] = title;
    data['subTitle'] = subTitle;
    data['promoCode'] = promoCode;
    if (desc != null) {
      final v = desc;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['desc'] = arr0;
    }
    if (tnc != null) {
      final v = tnc;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['tnc'] = arr0;
    }
    data['offerOn'] = offerOn;
    if (offerDetails != null) {
      final v = offerDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['offerDetails'] = arr0;
    }

    data['accessType'] = accessType;
    data['appUserCouponId'] = appUserCouponId;
    data['appRedeemId'] = appRedeemId;
    data['expiresOn'] = expiresOn;

    if (validity != null) {
      data['validity'] = validity!.toJson();
    }
    if (uses != null) {
      data['uses'] = uses!.toJson();
    }
    if (theme != null) {
      data['theme'] = theme!.toJson();
    }
    data['priority'] = priority;
    return data;
  }
}

class PromoCodesModel {
/*
{
  "active": [
    {
      "promoCodeId": "7c488720-8dad-11ed-8874-d9f01db01365",
      "promoCodeName": "Happy New Year 2023",
      "title": "Happy New Year",
      "subTitle": "Get a special 10% discount on subscriptions on new year",
      "promoCode": "HAPPYNEWYEAR",
      "desc": [
        "kne"
      ],
      "tnc": [
        "djd"
      ],
      "offerOn": "SUBSCRIPTION",
      "offerDetails": [
        {
          "referenceId": "93ba08d0-6bec-11ed-8ffd-8541705c9e6f",
          "isPercentage": true,
          "discount": 10
        }
      ],
      "validity": {
        "startDate": 1672531200000,
        "endDate": 1673740800000
      },
      "uses": {
        "max": 1000,
        "maxDaily": 100,
        "perUser": 0,
        "current": 0
      },
      "theme": {
        "template": "offer-tile-green"
      },
      "priority": 0
    }
  ],
  "moreOffers": [
    {
      "promoCodeId": "53e3d720-8dae-11ed-8874-d9f01db01365",
      "promoCodeName": "New Year 2023 Renewal - Offer",
      "title": "30% OFF On Renewal",
      "subTitle": "30% Off on Renewal",
      "promoCode": "RENEWNEWYEAR",
      "desc": [
        "kne"
      ],
      "tnc": [
        "djd"
      ],
      "offerOn": "RENEWAL",
      "offerDetails": [
        {
          "referenceId": "465a8580-6f14-11ed-aa77-bf3df9a486be",
          "isPercentage": true,
          "discount": 30
        }
      ],
      "validity": {
        "startDate": 1672531200000,
        "endDate": 1675123200000
      },
      "uses": {
        "max": 10000,
        "maxDaily": 1000,
        "perUser": 0,
        "current": 0
      },
      "theme": {
        "template": "offer-tile-green"
      },
      "priority": 0
    }
  ]
} 
*/

  List<PromoCodesModelPromoCodes?>? active;
  List<PromoCodesModelPromoCodes?>? moreOffers;

  PromoCodesModel({
    this.active,
    this.moreOffers,
  });
  PromoCodesModel.fromJson(Map<String, dynamic> json) {
    if (json['active'] != null) {
      final v = json['active'];
      final arr0 = <PromoCodesModelPromoCodes>[];
      v.forEach((v) {
        arr0.add(PromoCodesModelPromoCodes.fromJson(v));
      });
      active = arr0;
    }
    if (json['moreOffers'] != null) {
      final v = json['moreOffers'];
      final arr0 = <PromoCodesModelPromoCodes>[];
      v.forEach((v) {
        arr0.add(PromoCodesModelPromoCodes.fromJson(v));
      });
      moreOffers = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (active != null) {
      final v = active;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['active'] = arr0;
    }
    if (moreOffers != null) {
      final v = moreOffers;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['moreOffers'] = arr0;
    }
    return data;
  }
}
