///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ConsultingPackagesModelConsultingPackagesTherapistPackagesCurrency {
/*
{
  "display": "₹",
  "billing": "INR"
} 
*/

  String? display;
  String? billing;

  ConsultingPackagesModelConsultingPackagesTherapistPackagesCurrency({
    this.display,
    this.billing,
  });
  ConsultingPackagesModelConsultingPackagesTherapistPackagesCurrency.fromJson(
      Map<String, dynamic> json) {
    display = json['display']?.toString();
    billing = json['billing']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['display'] = display;
    data['billing'] = billing;
    return data;
  }
}

class ConsultingPackagesModelConsultingPackagesTherapistPackagesDuration {
/*
{
  "display": "1 Hour",
  "inMinutes": 60
} 
*/

  String? display;
  int? inMinutes;

  ConsultingPackagesModelConsultingPackagesTherapistPackagesDuration({
    this.display,
    this.inMinutes,
  });
  ConsultingPackagesModelConsultingPackagesTherapistPackagesDuration.fromJson(
      Map<String, dynamic> json) {
    display = json['display']?.toString();
    inMinutes = json['inMinutes']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['display'] = display;
    data['inMinutes'] = inMinutes;
    return data;
  }
}

class ConsultingPackagesModelConsultingPackagesTherapistPackages {
/*
{
  "packageName": "FIRST_TIME_THERAPIST_SESSION_1_1_HOUR",
  "consultType": "THERAPIST",
  "consultingPackageId": "b2016510-6041-11ed-abdc-b7469cd68a31",
  "purchaseType": "FIRST TIME",
  "recommended": false,
  "sessions": 1,
  "duration": {
    "display": "1 Hour",
    "inMinutes": 60
  },
  "enabled": true,
  "country": "IN",
  "displayText": "string",
  "consultingCharges": 2149,
  "isPercentage": false,
  "discount": 0,
  "offerAmount":0,
  "purchaseAmount": 2149,
  "countryConsultingPackageId": "0c6c9350-6720-11ed-9dc4-5f23f1a2c358",
  "currency": {
    "display": "₹",
    "billing": "INR"
  },
  "isSelected": false
} 
*/

  String? packageName;
  String? consultType;
  String? consultingPackageId;
  String? purchaseType;
  bool? recommended;
  int? sessions;
  ConsultingPackagesModelConsultingPackagesTherapistPackagesDuration? duration;
  bool? enabled;
  String? country;
  String? displayText;
  double? consultingCharges;
  bool? isPercentage;
  double? discount;
  double? offerAmount;
  double? purchaseAmount;
  String? countryConsultingPackageId;
  ConsultingPackagesModelConsultingPackagesTherapistPackagesCurrency? currency;
  bool? isSelected;

  ConsultingPackagesModelConsultingPackagesTherapistPackages({
    this.packageName,
    this.consultType,
    this.consultingPackageId,
    this.purchaseType,
    this.recommended,
    this.sessions,
    this.duration,
    this.enabled,
    this.country,
    this.displayText,
    this.consultingCharges,
    this.isPercentage,
    this.discount,
    this.offerAmount,
    this.purchaseAmount,
    this.countryConsultingPackageId,
    this.currency,
    this.isSelected,
  });
  ConsultingPackagesModelConsultingPackagesTherapistPackages.fromJson(
      Map<String, dynamic> json) {
    packageName = json['packageName']?.toString();
    consultType = json['consultType']?.toString();
    consultingPackageId = json['consultingPackageId']?.toString();
    purchaseType = json['purchaseType']?.toString();
    recommended = json['recommended'];
    sessions = json['sessions']?.toInt();
    duration = (json['duration'] != null)
        ? ConsultingPackagesModelConsultingPackagesTherapistPackagesDuration
            .fromJson(json['duration'])
        : null;
    enabled = json['enabled'];
    country = json['country']?.toString();
    displayText = json['displayText']?.toString();
    consultingCharges = json['consultingCharges']?.toDouble();
    isPercentage = json['isPercentage'];
    discount = json['discount']?.toDouble();
    offerAmount = json['offerAmount']?.toDouble();

    purchaseAmount = json['purchaseAmount']?.toDouble();
    countryConsultingPackageId = json['countryConsultingPackageId']?.toString();
    currency = (json['currency'] != null)
        ? ConsultingPackagesModelConsultingPackagesTherapistPackagesCurrency
            .fromJson(json['currency'])
        : null;
    isSelected = json['isSelected'] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['packageName'] = packageName;
    data['consultType'] = consultType;
    data['consultingPackageId'] = consultingPackageId;
    data['purchaseType'] = purchaseType;
    data['recommended'] = recommended;
    data['sessions'] = sessions;
    if (duration != null) {
      data['duration'] = duration!.toJson();
    }
    data['enabled'] = enabled;
    data['country'] = country;
    data['displayText'] = displayText;
    data['consultingCharges'] = consultingCharges;
    data['isPercentage'] = isPercentage;
    data['discount'] = discount;
    data['offerAmount'] = offerAmount;

    data['purchaseAmount'] = purchaseAmount;
    data['countryConsultingPackageId'] = countryConsultingPackageId;
    if (currency != null) {
      data['currency'] = currency!.toJson();
    }
    data['isSelected'] = isSelected ?? false;
    return data;
  }
}

class ConsultingPackagesModelConsultingPackagesDoctorPackagesCurrency {
/*
{
  "display": "₹",
  "billing": "INR"
} 
*/

  String? display;
  String? billing;

  ConsultingPackagesModelConsultingPackagesDoctorPackagesCurrency({
    this.display,
    this.billing,
  });
  ConsultingPackagesModelConsultingPackagesDoctorPackagesCurrency.fromJson(
      Map<String, dynamic> json) {
    display = json['display']?.toString();
    billing = json['billing']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['display'] = display;
    data['billing'] = billing;
    return data;
  }
}

class ConsultingPackagesModelConsultingPackagesDoctorPackagesDuration {
/*
{
  "display": "20 Minutes",
  "inMinutes": 20
} 
*/

  String? display;
  int? inMinutes;

  ConsultingPackagesModelConsultingPackagesDoctorPackagesDuration({
    this.display,
    this.inMinutes,
  });
  ConsultingPackagesModelConsultingPackagesDoctorPackagesDuration.fromJson(
      Map<String, dynamic> json) {
    display = json['display']?.toString();
    inMinutes = json['inMinutes']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['display'] = display;
    data['inMinutes'] = inMinutes;
    return data;
  }
}

class ConsultingPackagesModelConsultingPackagesDoctorPackages {
/*
{
  "packageName": "ALL_TIME_DOCTOR_SESSION_1_20_MINUTES",
  "consultType": "DOCTOR",
  "consultingPackageId": "934edec0-6016-11ed-8f45-01a6d7da412e",
  "purchaseType": "ALL TIME",
  "recommended": false,
  "sessions": 1,
  "duration": {
    "display": "20 Minutes",
    "inMinutes": 20
  },
  "enabled": true,
  "country": "IN",
  "displayText": "Single Doctor Session @ Rs. 500",
  "consultingCharges": 500,
  "isPercentage": true,
  "discount": 0,
  "offerAmount":0,
  "purchaseAmount": 500,
  "countryConsultingPackageId": "afa21c80-603a-11ed-a9b3-d371502f605f",
  "currency": {
    "display": "₹",
    "billing": "INR"
  },
  "isSelected": false
} 
*/

  String? packageName;
  String? consultType;
  String? consultingPackageId;
  String? purchaseType;
  bool? recommended;
  String? recommendedText;
  int? sessions;
  ConsultingPackagesModelConsultingPackagesDoctorPackagesDuration? duration;
  bool? enabled;
  String? country;
  String? displayText;
  double? consultingCharges;
  bool? isPercentage;
  double? discount;
  double? offerAmount;
  double? purchaseAmount;
  String? countryConsultingPackageId;
  ConsultingPackagesModelConsultingPackagesDoctorPackagesCurrency? currency;
  bool? isSelected;

  ConsultingPackagesModelConsultingPackagesDoctorPackages({
    this.packageName,
    this.consultType,
    this.consultingPackageId,
    this.purchaseType,
    this.recommended,
    this.recommendedText,
    this.sessions,
    this.duration,
    this.enabled,
    this.country,
    this.displayText,
    this.consultingCharges,
    this.isPercentage,
    this.discount,
    this.offerAmount,
    this.purchaseAmount,
    this.countryConsultingPackageId,
    this.currency,
    this.isSelected,
  });
  ConsultingPackagesModelConsultingPackagesDoctorPackages.fromJson(
      Map<String, dynamic> json) {
    packageName = json['packageName']?.toString();
    consultType = json['consultType']?.toString();
    consultingPackageId = json['consultingPackageId']?.toString();
    purchaseType = json['purchaseType']?.toString();
    recommended = json['recommended'];
    recommendedText = json['recommendedText']?.toString();
    sessions = json['sessions']?.toInt();
    duration = (json['duration'] != null)
        ? ConsultingPackagesModelConsultingPackagesDoctorPackagesDuration
            .fromJson(json['duration'])
        : null;
    enabled = json['enabled'];
    country = json['country']?.toString();
    displayText = json['displayText']?.toString();
    consultingCharges = json['consultingCharges']?.toDouble();
    isPercentage = json['isPercentage'];
    discount = json['discount']?.toDouble();
    offerAmount = json['offerAmount']?.toDouble();
    purchaseAmount = json['purchaseAmount']?.toDouble();
    countryConsultingPackageId = json['countryConsultingPackageId']?.toString();
    currency = (json['currency'] != null)
        ? ConsultingPackagesModelConsultingPackagesDoctorPackagesCurrency
            .fromJson(json['currency'])
        : null;
    isSelected = json['isSelected'] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['packageName'] = packageName;
    data['consultType'] = consultType;
    data['consultingPackageId'] = consultingPackageId;
    data['purchaseType'] = purchaseType;
    data['recommended'] = recommended;
    data['recommendedText'] = recommendedText;
    data['sessions'] = sessions;
    if (duration != null) {
      data['duration'] = duration!.toJson();
    }
    data['enabled'] = enabled;
    data['country'] = country;
    data['displayText'] = displayText;
    data['consultingCharges'] = consultingCharges;
    data['isPercentage'] = isPercentage;
    data['discount'] = discount;
    data['offerAmount'] = offerAmount;
    data['purchaseAmount'] = purchaseAmount;
    data['countryConsultingPackageId'] = countryConsultingPackageId;
    if (currency != null) {
      data['currency'] = currency!.toJson();
    }
    data['isSelected'] = isSelected ?? false;
    return data;
  }
}

class ConsultingPackagesModelConsultingPackages {
/*
{
  "doctorPackages": [
    {
      "packageName": "ALL_TIME_DOCTOR_SESSION_1_20_MINUTES",
      "consultType": "DOCTOR",
      "consultingPackageId": "934edec0-6016-11ed-8f45-01a6d7da412e",
      "purchaseType": "ALL TIME",
      "recommended": false,
      "sessions": 1,
      "duration": {
        "display": "20 Minutes",
        "inMinutes": 20
      },
      "enabled": true,
      "country": "IN",
      "displayText": "Single Doctor Session @ Rs. 500",
      "consultingCharges": 500,
      "isPercentage": true,
      "discount": 0,
       "offerAmount":0,
      "purchaseAmount": 500,
      "countryConsultingPackageId": "afa21c80-603a-11ed-a9b3-d371502f605f",
      "currency": {
        "display": "₹",
        "billing": "INR"
      },
      "isSelected": false
    }
  ],
  "therapistPackages": [
    {
      "packageName": "FIRST_TIME_THERAPIST_SESSION_1_1_HOUR",
      "consultType": "THERAPIST",
      "consultingPackageId": "b2016510-6041-11ed-abdc-b7469cd68a31",
      "purchaseType": "FIRST TIME",
      "recommended": false,
      "sessions": 1,
      "duration": {
        "display": "1 Hour",
        "inMinutes": 60
      },
      "enabled": true,
      "country": "IN",
      "displayText": "string",
      "consultingCharges": 2149,
      "isPercentage": false,
      "discount": 0,
       "offerAmount":0,

      "purchaseAmount": 2149,
      "countryConsultingPackageId": "0c6c9350-6720-11ed-9dc4-5f23f1a2c358",
      "currency": {
        "display": "₹",
        "billing": "INR"
      },
      "isSelected": false
    }
  ]
} 
*/

  List<ConsultingPackagesModelConsultingPackagesDoctorPackages?>?
      doctorPackages;
  List<ConsultingPackagesModelConsultingPackagesTherapistPackages?>?
      therapistPackages;

  ConsultingPackagesModelConsultingPackages({
    this.doctorPackages,
    this.therapistPackages,
  });
  ConsultingPackagesModelConsultingPackages.fromJson(
      Map<String, dynamic> json) {
    if (json['doctorPackages'] != null) {
      final v = json['doctorPackages'];
      final arr0 = <ConsultingPackagesModelConsultingPackagesDoctorPackages>[];
      v.forEach((v) {
        arr0.add(
            ConsultingPackagesModelConsultingPackagesDoctorPackages.fromJson(
                v));
      });
      doctorPackages = arr0;
    }
    if (json['therapistPackages'] != null) {
      final v = json['therapistPackages'];
      final arr0 =
          <ConsultingPackagesModelConsultingPackagesTherapistPackages>[];
      v.forEach((v) {
        arr0.add(
            ConsultingPackagesModelConsultingPackagesTherapistPackages.fromJson(
                v));
      });
      therapistPackages = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (doctorPackages != null) {
      final v = doctorPackages;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['doctorPackages'] = arr0;
    }
    if (therapistPackages != null) {
      final v = therapistPackages;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['therapistPackages'] = arr0;
    }
    return data;
  }
}

class ConsultingPackagesModel {
/*
{
  "isBillingAllowed": true,
  "consultingPackages": {
    "doctorPackages": [
      {
        "packageName": "ALL_TIME_DOCTOR_SESSION_1_20_MINUTES",
        "consultType": "DOCTOR",
        "consultingPackageId": "934edec0-6016-11ed-8f45-01a6d7da412e",
        "purchaseType": "ALL TIME",
        "recommended": false,
        "sessions": 1,
        "duration": {
          "display": "20 Minutes",
          "inMinutes": 20
        },
        "enabled": true,
        "country": "IN",
        "displayText": "Single Doctor Session @ Rs. 500",
        "consultingCharges": 500,
        "isPercentage": true,
        "discount": 0,
        "offerAmount":0,
        "purchaseAmount": 500,
        "countryConsultingPackageId": "afa21c80-603a-11ed-a9b3-d371502f605f",
        "currency": {
          "display": "₹",
          "billing": "INR"
        },
        "isSelected": false
      }
    ],
    "therapistPackages": [
      {
        "packageName": "FIRST_TIME_THERAPIST_SESSION_1_1_HOUR",
        "consultType": "THERAPIST",
        "consultingPackageId": "b2016510-6041-11ed-abdc-b7469cd68a31",
        "purchaseType": "FIRST TIME",
        "recommended": false,
        "sessions": 1,
        "duration": {
          "display": "1 Hour",
          "inMinutes": 60
        },
        "enabled": true,
        "country": "IN",
        "displayText": "string",
        "consultingCharges": 2149,
        "isPercentage": false,
        "discount": 0,
       "offerAmount":0,

        "purchaseAmount": 2149,
        "countryConsultingPackageId": "0c6c9350-6720-11ed-9dc4-5f23f1a2c358",
        "currency": {
          "display": "₹",
          "billing": "INR"
        },
        "isSelected": false
      }
    ]
  }
} 
*/

  bool? isBillingAllowed;
  ConsultingPackagesModelConsultingPackages? consultingPackages;

  ConsultingPackagesModel({
    this.isBillingAllowed,
    this.consultingPackages,
  });
  ConsultingPackagesModel.fromJson(Map<String, dynamic> json) {
    isBillingAllowed = json['isBillingAllowed'];
    consultingPackages = (json['consultingPackages'] != null)
        ? ConsultingPackagesModelConsultingPackages.fromJson(
            json['consultingPackages'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isBillingAllowed'] = isBillingAllowed;
    if (consultingPackages != null) {
      data['consultingPackages'] = consultingPackages!.toJson();
    }
    return data;
  }
}
