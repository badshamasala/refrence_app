///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class SupcriptionPackagesModelSubscriptionPackagesCurrency {
/*
{
  "display": "₹",
  "billing": "INR"
} 
*/

  String? display;
  String? billing;

  SupcriptionPackagesModelSubscriptionPackagesCurrency({
    this.display,
    this.billing,
  });
  SupcriptionPackagesModelSubscriptionPackagesCurrency.fromJson(
      Map<String, dynamic> json) {
    display = json['display']?.toString();
    billing = json['billing']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['display'] = display;
    data['billing'] = billing;
    return data;
  }
}

class SupcriptionPackagesModelSubscriptionPackagesSessions {
/*
{
  "doctor": 0,
  "therapist": 0
} 
*/

  int? doctor;
  int? therapist;

  SupcriptionPackagesModelSubscriptionPackagesSessions({
    this.doctor,
    this.therapist,
  });
  SupcriptionPackagesModelSubscriptionPackagesSessions.fromJson(
      Map<String, dynamic> json) {
    doctor = json['doctor']?.toInt();
    therapist = json['therapist']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['doctor'] = doctor;
    data['therapist'] = therapist;
    return data;
  }
}

class SupcriptionPackagesModelSubscriptionPackages {
/*
{
  "subscriptionPackageId": "acd39700-673c-11ed-8772-c3759ca8486e",
  "subscriptionType": "AAYU",
  "userType": "AAYU NOT SUBSCRIBED",
  "programType": "HEALING NOT SUBSCRIBED",
  "purchaseType": "SUBSCRIBE",
  "packageName": "SUBSCRIBE_AAYU_MONTHLY|AAYU_NOT_SUBSCRIBED|HEALING_NOT_SUBSCRIBED",
   "description":"Text",
  "packageType": "MONTHLY",
  "sessions": {
    "doctor": 0,
    "therapist": 0
  },
  "days": 30,
  "priority": 1,
  "recommended": false,
  "enabled": true,
  "country": "IN",
  "currency": {
    "display": "₹",
    "billing": "INR"
  },
  "displayText": "1 Month",
  "subscriptionCharges": 299,
  "isPercentage": false,
  "discount": 150,
  "purchaseAmount": 149,
  "countrySubscriptionPackageId": "7a47faf0-6747-11ed-9b5c-cb51c420e6e8",
  "isSelected": false
} 
*/

  String? subscriptionPackageId;
  String? subscriptionType;
  String? userType;
  String? programType;
  String? purchaseType;
  String? packageName;
  String? description;
  String? packageType;
  SupcriptionPackagesModelSubscriptionPackagesSessions? sessions;
  int? days;
  int? priority;
  bool? recommended;
  String? recommendedText;
  bool? enabled;
  String? country;
  SupcriptionPackagesModelSubscriptionPackagesCurrency? currency;
  String? displayText;
  double? subscriptionCharges;
  bool? isPercentage;
  double? discount;
  double? purchaseAmount;
  double? offerAmount;
  double? finalPurchaseAmount;
  String? countrySubscriptionPackageId;
  bool? isSelected;

  SupcriptionPackagesModelSubscriptionPackages({
    this.subscriptionPackageId,
    this.subscriptionType,
    this.userType,
    this.programType,
    this.purchaseType,
    this.packageName,
    this.description,
    this.packageType,
    this.sessions,
    this.days,
    this.priority,
    this.recommended,
    this.recommendedText,
    this.enabled,
    this.country,
    this.currency,
    this.displayText,
    this.subscriptionCharges,
    this.isPercentage,
    this.discount,
    this.purchaseAmount,
    this.offerAmount,
    this.finalPurchaseAmount,
    this.countrySubscriptionPackageId,
    this.isSelected,
  });
  SupcriptionPackagesModelSubscriptionPackages.fromJson(
      Map<String, dynamic> json) {
    subscriptionPackageId = json['subscriptionPackageId']?.toString();
    subscriptionType = json['subscriptionType']?.toString();
    userType = json['userType']?.toString();
    programType = json['programType']?.toString();
    purchaseType = json['purchaseType']?.toString();
    packageName = json['packageName']?.toString();
    description = json['description']?.toString();
    packageType = json['packageType']?.toString();
    sessions = (json['sessions'] != null)
        ? SupcriptionPackagesModelSubscriptionPackagesSessions.fromJson(
            json['sessions'])
        : null;
    days = json['days']?.toInt();
    priority = json['priority']?.toInt();
    recommended = json['recommended'];
    recommendedText = json['recommendedText']?.toString();
    enabled = json['enabled'];
    country = json['country']?.toString();
    currency = (json['currency'] != null)
        ? SupcriptionPackagesModelSubscriptionPackagesCurrency.fromJson(
            json['currency'])
        : null;
    displayText = json['displayText']?.toString();
    subscriptionCharges = json['subscriptionCharges']?.toDouble();
    isPercentage = json['isPercentage'];
    discount = json['discount']?.toDouble();
    purchaseAmount = json['purchaseAmount']?.toDouble();
    offerAmount = json['offerAmount']?.toDouble() ?? 0;
    finalPurchaseAmount =
        json['finalPurchaseAmount']?.toDouble()?.toDouble() ?? 0;
    countrySubscriptionPackageId =
        json['countrySubscriptionPackageId']?.toString();
    isSelected = json['isSelected'] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['subscriptionPackageId'] = subscriptionPackageId;
    data['subscriptionType'] = subscriptionType;
    data['userType'] = userType;
    data['programType'] = programType;
    data['purchaseType'] = purchaseType;
    data['packageName'] = packageName;
    data['description'] = description;

    data['packageType'] = packageType;
    if (sessions != null) {
      data['sessions'] = sessions!.toJson();
    }
    data['days'] = days;
    data['priority'] = priority;
    data['recommended'] = recommended;
    data['recommendedText'] = recommendedText;
    data['enabled'] = enabled;
    data['country'] = country;
    if (currency != null) {
      data['currency'] = currency!.toJson();
    }
    data['displayText'] = displayText;
    data['subscriptionCharges'] = subscriptionCharges;
    data['isPercentage'] = isPercentage;
    data['discount'] = discount;
    data['purchaseAmount'] = purchaseAmount;
    data['offerAmount'] = offerAmount ?? 0;
    data['finalPurchaseAmount'] = finalPurchaseAmount ?? 0;
    data['countrySubscriptionPackageId'] = countrySubscriptionPackageId;
    data['isSelected'] = isSelected ?? false;
    return data;
  }
}

class SupcriptionPackagesModel {
/*
{
  "isSubscribed": true,
  "isProgramSubscribed": true,
  "purchaseType": "SUBSCRIBE",
  "subscriptionType": "AAYU",
  "isBillingAllowed": true,
  "subscriptionPackages": [
    {
      "subscriptionPackageId": "acd39700-673c-11ed-8772-c3759ca8486e",
      "subscriptionType": "AAYU",
      "userType": "AAYU NOT SUBSCRIBED",
      "programType": "HEALING NOT SUBSCRIBED",
      "purchaseType": "SUBSCRIBE",
      "packageName": "SUBSCRIBE_AAYU_MONTHLY|AAYU_NOT_SUBSCRIBED|HEALING_NOT_SUBSCRIBED",
      "description":"Text",
      "packageType": "MONTHLY",
      "sessions": {
        "doctor": 0,
        "therapist": 0
      },
      "days": 30,
      "priority": 1,
      "recommended": false,
      "enabled": true,
      "country": "IN",
      "currency": {
        "display": "₹",
        "billing": "INR"
      },
      "displayText": "1 Month",
      "subscriptionCharges": 299,
      "isPercentage": false,
      "discount": 150,
      "purchaseAmount": 149,
      "countrySubscriptionPackageId": "7a47faf0-6747-11ed-9b5c-cb51c420e6e8",
      "isSelected": false
    }
  ]
} 
*/

  bool? isSubscribed;
  bool? isProgramSubscribed;
  String? purchaseType;
  String? subscriptionType;
  bool? isBillingAllowed;
  List<SupcriptionPackagesModelSubscriptionPackages?>? subscriptionPackages;

  SupcriptionPackagesModel({
    this.isSubscribed,
    this.isProgramSubscribed,
    this.purchaseType,
    this.subscriptionType,
    this.isBillingAllowed,
    this.subscriptionPackages,
  });
  SupcriptionPackagesModel.fromJson(Map<String, dynamic> json) {
    isSubscribed = json['isSubscribed'];
    isProgramSubscribed = json['isProgramSubscribed'];
    purchaseType = json['purchaseType']?.toString();
    subscriptionType = json['subscriptionType']?.toString();
    isBillingAllowed = json['isBillingAllowed'];
    if (json['subscriptionPackages'] != null) {
      final v = json['subscriptionPackages'];
      final arr0 = <SupcriptionPackagesModelSubscriptionPackages>[];
      v.forEach((v) {
        arr0.add(SupcriptionPackagesModelSubscriptionPackages.fromJson(v));
      });
      subscriptionPackages = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isSubscribed'] = isSubscribed;
    data['isProgramSubscribed'] = isProgramSubscribed;
    data['purchaseType'] = purchaseType;
    data['subscriptionType'] = subscriptionType;
    data['isBillingAllowed'] = isBillingAllowed;
    if (subscriptionPackages != null) {
      final v = subscriptionPackages;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['subscriptionPackages'] = arr0;
    }
    return data;
  }
}
