///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class HealthTrackerUnitsModelHealthTrackerUnitsUnitsRanges {
/*
{
  "range": "LOW",
  "low": 2.1,
  "high": 4.1,
  "weightage": 13.1
} 
*/

  String? range;
  double? low;
  double? high;
  double? weightage;

  HealthTrackerUnitsModelHealthTrackerUnitsUnitsRanges({
    this.range,
    this.low,
    this.high,
    this.weightage,
  });
  HealthTrackerUnitsModelHealthTrackerUnitsUnitsRanges.fromJson(
      Map<String, dynamic> json) {
    range = json['range']?.toString();
    low = json['low']?.toDouble();
    high = json['high']?.toDouble();
    weightage = json['weightage']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['range'] = range;
    data['low'] = low;
    data['high'] = high;
    data['weightage'] = weightage;
    return data;
  }
}

class HealthTrackerUnitsModelHealthTrackerUnitsUnits {
/*
{
  "unit": "Feet & Inches",
  "unitPicker": "DOUBLE",
  "displayUnit": "Feet/Inches",
  "ranges": [
    {
      "range": "LOW",
      "low": 2.1,
      "high": 4.1,
      "weightage": 13.1
    }
  ]
} 
*/

  String? unit;
  String? unitPicker;
  String? displayUnit;
  List<HealthTrackerUnitsModelHealthTrackerUnitsUnitsRanges?>? ranges;
  bool? selected;

  HealthTrackerUnitsModelHealthTrackerUnitsUnits({
    this.unit,
    this.unitPicker,
    this.displayUnit,
    this.ranges,
    this.selected,
  });
  HealthTrackerUnitsModelHealthTrackerUnitsUnits.fromJson(
      Map<String, dynamic> json) {
    unit = json['unit']?.toString();
    unitPicker = json['unitPicker']?.toString();
    displayUnit = json['displayUnit']?.toString();
    if (json['ranges'] != null) {
      final v = json['ranges'];
      final arr0 = <HealthTrackerUnitsModelHealthTrackerUnitsUnitsRanges>[];
      v.forEach((v) {
        arr0.add(
            HealthTrackerUnitsModelHealthTrackerUnitsUnitsRanges.fromJson(v));
      });
      ranges = arr0;
    }
    selected = json["selected"] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['unit'] = unit;
    data['unitPicker'] = unitPicker;
    data['displayUnit'] = displayUnit;
    if (ranges != null) {
      final v = ranges;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['ranges'] = arr0;
    }
    data['selected'] = selected;
    return data;
  }
}

class HealthTrackerUnitsModelHealthTrackerUnits {
/*
{
  "parameter": "HEIGHT",
  "status": "ACTIVE",
  "units": [
    {
      "unit": "Feet & Inches",
      "unitPicker": "DOUBLE",
      "displayUnit": "Feet/Inches",
      "ranges": [
        {
          "range": "LOW",
          "low": 2.1,
          "high": 4.1,
          "weightage": 13.1
        }
      ]
    }
  ],
  "healthTrackerMasterId": "4b112b00-c1ae-11ed-8c89-3d9b25291134"
} 
*/

  String? parameter;
  bool? perDaySingleEntry;
  String? status;
  List<HealthTrackerUnitsModelHealthTrackerUnitsUnits?>? units;
  String? healthTrackerMasterId;

  HealthTrackerUnitsModelHealthTrackerUnits({
    this.parameter,
    this.perDaySingleEntry,
    this.status,
    this.units,
    this.healthTrackerMasterId,
  });
  HealthTrackerUnitsModelHealthTrackerUnits.fromJson(
      Map<String, dynamic> json) {
    parameter = json['parameter']?.toString();
    perDaySingleEntry = json['perDaySingleEntry'] ?? false;
    status = json['status']?.toString();
    if (json['units'] != null) {
      final v = json['units'];
      final arr0 = <HealthTrackerUnitsModelHealthTrackerUnitsUnits>[];
      v.forEach((v) {
        arr0.add(HealthTrackerUnitsModelHealthTrackerUnitsUnits.fromJson(v));
      });
      units = arr0;
    }
    healthTrackerMasterId = json['healthTrackerMasterId']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['parameter'] = parameter;
    data['perDaySingleEntry'] = perDaySingleEntry ?? false;
    data['status'] = status;
    if (units != null) {
      final v = units;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['units'] = arr0;
    }
    data['healthTrackerMasterId'] = healthTrackerMasterId;
    return data;
  }
}

class HealthTrackerUnitsModel {
/*
{
  "healthTrackerUnits": {
    "parameter": "HEIGHT",
    "status": "ACTIVE",
    "units": [
      {
        "unit": "Feet & Inches",
        "unitPicker": "DOUBLE",
        "displayUnit": "Feet/Inches",
        "ranges": [
          {
            "range": "LOW",
            "low": 2.1,
            "high": 4.1,
            "weightage": 13.1
          }
        ]
      }
    ],
    "healthTrackerMasterId": "4b112b00-c1ae-11ed-8c89-3d9b25291134"
  }
} 
*/

  HealthTrackerUnitsModelHealthTrackerUnits? healthTrackerUnits;

  HealthTrackerUnitsModel({
    this.healthTrackerUnits,
  });
  HealthTrackerUnitsModel.fromJson(Map<String, dynamic> json) {
    healthTrackerUnits = (json['healthTrackerUnits'] != null)
        ? HealthTrackerUnitsModelHealthTrackerUnits.fromJson(
            json['healthTrackerUnits'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (healthTrackerUnits != null) {
      data['healthTrackerUnits'] = healthTrackerUnits!.toJson();
    }
    return data;
  }
}
