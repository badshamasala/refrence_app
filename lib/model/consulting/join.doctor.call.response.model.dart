///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class JoinDoctorCallResponseAgoraDetails {
/*
{
  "token": "0062ae0887f11d64ca7b775782488589042IAAvfhVDxhMqpeEYM7INMxVTZHckFgq0ubTGiMEVSk+z62kdQAnqihZoIgAliIj5ps8RYwQAAQDA+w1jAgDA+w1jAwDA+w1jBADA+w1j",
  "secondsRemaining": -186054
} 
*/

  String? token;
  int? secondsRemaining;

  JoinDoctorCallResponseAgoraDetails({
    this.token,
    this.secondsRemaining,
  });
  JoinDoctorCallResponseAgoraDetails.fromJson(Map<String, dynamic> json) {
    token = json['token']?.toString();
    secondsRemaining = json['secondsRemaining']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['token'] = token;
    data['secondsRemaining'] = secondsRemaining;
    return data;
  }
}

class JoinDoctorCallResponseSessionsDisease {
/*
{
  "diseaseId": "a721f7a0-c20c-11ec-8195-fb3d9a5f7244"
} 
*/

  String? diseaseId;

  JoinDoctorCallResponseSessionsDisease({
    this.diseaseId,
  });
  JoinDoctorCallResponseSessionsDisease.fromJson(Map<String, dynamic> json) {
    diseaseId = json['diseaseId']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['diseaseId'] = diseaseId;
    return data;
  }
}

class JoinDoctorCallResponseSessions {
/*
{
  "scheduledDate": "2022-08-30",
  "slotTime": "05:00 PM",
  "slotEndTime": "05:30 PM",
  "status": "MISSED",
  "callStatus": false,
  "doctorId": "8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e",
  "doctorName": "Dr. Himanshu Bhiwandkar",
  "profilePic": "",
  "callJoinLink": "https://meet.toktown.tk/JtNjUT",
  "consultType": "GOT QUERY",
  "sessionId": "b79806e2-236b-11ed-867d-1768d6e6230f",
  "disease": [
    {
      "diseaseId": "a721f7a0-c20c-11ec-8195-fb3d9a5f7244"
    }
  ],
  "isReschedule": false,
  "bookType": "FREE"
} 
*/

  String? scheduledDate;
  String? slotTime;
  String? slotEndTime;
  String? status;
  bool? callStatus;
  String? doctorId;
  String? doctorName;
  String? profilePic;
  String? callJoinLink;
  String? consultType;
  String? sessionId;
  List<JoinDoctorCallResponseSessionsDisease?>? disease;
  bool? isReschedule;
  String? bookType;

  JoinDoctorCallResponseSessions({
    this.scheduledDate,
    this.slotTime,
    this.slotEndTime,
    this.status,
    this.callStatus,
    this.doctorId,
    this.doctorName,
    this.profilePic,
    this.callJoinLink,
    this.consultType,
    this.sessionId,
    this.disease,
    this.isReschedule,
    this.bookType,
  });
  JoinDoctorCallResponseSessions.fromJson(Map<String, dynamic> json) {
    scheduledDate = json['scheduledDate']?.toString();
    slotTime = json['slotTime']?.toString();
    slotEndTime = json['slotEndTime']?.toString();
    status = json['status']?.toString();
    callStatus = json['callStatus'];
    doctorId = json['doctorId']?.toString();
    doctorName = json['doctorName']?.toString();
    profilePic = json['profilePic']?.toString();
    callJoinLink = json['callJoinLink']?.toString();
    consultType = json['consultType']?.toString();
    sessionId = json['sessionId']?.toString();
    if (json['disease'] != null) {
      final v = json['disease'];
      final arr0 = <JoinDoctorCallResponseSessionsDisease>[];
      v.forEach((v) {
        arr0.add(JoinDoctorCallResponseSessionsDisease.fromJson(v));
      });
      disease = arr0;
    }
    isReschedule = json['isReschedule'];
    bookType = json['bookType']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['scheduledDate'] = scheduledDate;
    data['slotTime'] = slotTime;
    data['slotEndTime'] = slotEndTime;
    data['status'] = status;
    data['callStatus'] = callStatus;
    data['doctorId'] = doctorId;
    data['doctorName'] = doctorName;
    data['profilePic'] = profilePic;
    data['callJoinLink'] = callJoinLink;
    data['consultType'] = consultType;
    data['sessionId'] = sessionId;
    if (disease != null) {
      final v = disease;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['disease'] = arr0;
    }
    data['isReschedule'] = isReschedule;
    data['bookType'] = bookType;
    return data;
  }
}

class JoinDoctorCallResponse {
/*
{
  "sessions": {
    "scheduledDate": "2022-08-30",
    "slotTime": "05:00 PM",
    "slotEndTime": "05:30 PM",
    "status": "MISSED",
    "callStatus": false,
    "doctorId": "8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e",
    "doctorName": "Dr. Himanshu Bhiwandkar",
    "profilePic": "",
    "callJoinLink": "https://meet.toktown.tk/JtNjUT",
    "consultType": "GOT QUERY",
    "sessionId": "b79806e2-236b-11ed-867d-1768d6e6230f",
    "disease": [
      {
        "diseaseId": "a721f7a0-c20c-11ec-8195-fb3d9a5f7244"
      }
    ],
    "isReschedule": false,
    "bookType": "FREE"
  },
  "agoraDetails": {
    "token": "0062ae0887f11d64ca7b775782488589042IAAvfhVDxhMqpeEYM7INMxVTZHckFgq0ubTGiMEVSk+z62kdQAnqihZoIgAliIj5ps8RYwQAAQDA+w1jAgDA+w1jAwDA+w1jBADA+w1j",
    "secondsRemaining": -186054
  }
} 
*/

  JoinDoctorCallResponseSessions? sessions;
  JoinDoctorCallResponseAgoraDetails? agoraDetails;

  JoinDoctorCallResponse({
    this.sessions,
    this.agoraDetails,
  });
  JoinDoctorCallResponse.fromJson(Map<String, dynamic> json) {
    sessions = (json['sessions'] != null)
        ? JoinDoctorCallResponseSessions.fromJson(json['sessions'])
        : null;
    agoraDetails = (json['agoraDetails'] != null)
        ? JoinDoctorCallResponseAgoraDetails.fromJson(json['agoraDetails'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (sessions != null) {
      data['sessions'] = sessions!.toJson();
    }
    if (agoraDetails != null) {
      data['agoraDetails'] = agoraDetails!.toJson();
    }
    return data;
  }
}
