///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ConsultingPackageResponsePackagesDoctorSessionsOptions {
/*
{
  "sessionId": "1",
  "sessions": "1 Sessions/15 minute each",
  "amount": "399"
} 
*/

  String? sessionId;
  String? sessions;
  String? amount;
  bool? isSelected;

  ConsultingPackageResponsePackagesDoctorSessionsOptions(
      {this.sessionId, this.sessions, this.amount, this.isSelected});
  ConsultingPackageResponsePackagesDoctorSessionsOptions.fromJson(
      Map<String, dynamic> json) {
    sessionId = json['sessionId']?.toString();
    sessions = json['sessions']?.toString();
    amount = json['amount']?.toString();
    isSelected = json["isSelected"] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['sessionId'] = sessionId;
    data['sessions'] = sessions;
    data['amount'] = amount;
    data['isSelected'] = isSelected ?? false;
    return data;
  }
}

class ConsultingPackageResponsePackagesDoctorSessions {
/*
{
  "title": "Add Doctor Consultation",
  "desc": "We recommend a monthly consultation where you can review your progress with a doctor.",
  "options": [
    {
      "sessionId": "1",
      "sessions": "1 Sessions/15 minute each",
      "amount": "399"
    }
  ]
} 
*/

  String? title;
  String? desc;
  List<ConsultingPackageResponsePackagesDoctorSessionsOptions?>? options;

  ConsultingPackageResponsePackagesDoctorSessions({
    this.title,
    this.desc,
    this.options,
  });
  ConsultingPackageResponsePackagesDoctorSessions.fromJson(
      Map<String, dynamic> json) {
    title = json['title']?.toString();
    desc = json['desc']?.toString();
    if (json['options'] != null) {
      final v = json['options'];
      final arr0 = <ConsultingPackageResponsePackagesDoctorSessionsOptions>[];
      v.forEach((v) {
        arr0.add(
            ConsultingPackageResponsePackagesDoctorSessionsOptions.fromJson(v));
      });
      options = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['desc'] = desc;
    if (options != null) {
      final v = options;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['options'] = arr0;
    }
    return data;
  }
}

class ConsultingPackageResponsePackagesTrainerSessionsOptions {
/*
{
  "sessionId": "1",
  "sessions": "5 Sessions/1 hour each",
  "amount": "4999"
} 
*/

  String? sessionId;
  String? sessions;
  String? amount;
  bool? isSelected;

  ConsultingPackageResponsePackagesTrainerSessionsOptions(
      {this.sessionId, this.sessions, this.amount, this.isSelected});
  ConsultingPackageResponsePackagesTrainerSessionsOptions.fromJson(
      Map<String, dynamic> json) {
    sessionId = json['sessionId']?.toString();
    sessions = json['sessions']?.toString();
    amount = json['amount']?.toString();
    isSelected = json['isSelected'] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['sessionId'] = sessionId;
    data['sessions'] = sessions;
    data['amount'] = amount;
    data['isSelected'] = isSelected ?? false;
    return data;
  }
}

class ConsultingPackageResponsePackagesTrainerSessions {
/*
{
  "title": "Add Personal Training",
  "desc": "We recommend regular one-on-one training sessions that can help reinforce each week's learning.",
  "options": [
    {
      "sessionId": "1",
      "sessions": "5 Sessions/1 hour each",
      "amount": "4999"
    }
  ]
} 
*/

  String? title;
  String? desc;
  List<ConsultingPackageResponsePackagesTrainerSessionsOptions?>? options;

  ConsultingPackageResponsePackagesTrainerSessions({
    this.title,
    this.desc,
    this.options,
  });
  ConsultingPackageResponsePackagesTrainerSessions.fromJson(
      Map<String, dynamic> json) {
    title = json['title']?.toString();
    desc = json['desc']?.toString();
    if (json['options'] != null) {
      final v = json['options'];
      final arr0 = <ConsultingPackageResponsePackagesTrainerSessionsOptions>[];
      v.forEach((v) {
        arr0.add(
            ConsultingPackageResponsePackagesTrainerSessionsOptions.fromJson(
                v));
      });
      options = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['desc'] = desc;
    if (options != null) {
      final v = options;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['options'] = arr0;
    }
    return data;
  }
}

class ConsultingPackageResponsePackages {
/*
{
  "trainerSessions": {
    "title": "Add Personal Training",
    "desc": "We recommend regular one-on-one training sessions that can help reinforce each week's learning.",
    "options": [
      {
        "sessionId": "1",
        "sessions": "5 Sessions/1 hour each",
        "amount": "4999"
      }
    ]
  },
  "doctorSessions": {
    "title": "Add Doctor Consultation",
    "desc": "We recommend a monthly consultation where you can review your progress with a doctor.",
    "options": [
      {
        "sessionId": "1",
        "sessions": "1 Sessions/15 minute each",
        "amount": "399"
      }
    ]
  }
} 
*/

  ConsultingPackageResponsePackagesTrainerSessions? trainerSessions;
  ConsultingPackageResponsePackagesDoctorSessions? doctorSessions;

  ConsultingPackageResponsePackages({
    this.trainerSessions,
    this.doctorSessions,
  });
  ConsultingPackageResponsePackages.fromJson(Map<String, dynamic> json) {
    trainerSessions = (json['trainerSessions'] != null)
        ? ConsultingPackageResponsePackagesTrainerSessions.fromJson(
            json['trainerSessions'])
        : null;
    doctorSessions = (json['doctorSessions'] != null)
        ? ConsultingPackageResponsePackagesDoctorSessions.fromJson(
            json['doctorSessions'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (trainerSessions != null) {
      data['trainerSessions'] = trainerSessions!.toJson();
    }
    if (doctorSessions != null) {
      data['doctorSessions'] = doctorSessions!.toJson();
    }
    return data;
  }
}

class ConsultingPackageResponse {
/*
{
  "packages": {
    "trainerSessions": {
      "title": "Add Personal Training",
      "desc": "We recommend regular one-on-one training sessions that can help reinforce each week's learning.",
      "options": [
        {
          "sessionId": "1",
          "sessions": "5 Sessions/1 hour each",
          "amount": "4999"
        }
      ]
    },
    "doctorSessions": {
      "title": "Add Doctor Consultation",
      "desc": "We recommend a monthly consultation where you can review your progress with a doctor.",
      "options": [
        {
          "sessionId": "1",
          "sessions": "1 Sessions/15 minute each",
          "amount": "399"
        }
      ]
    }
  }
} 
*/

  ConsultingPackageResponsePackages? packages;

  ConsultingPackageResponse({
    this.packages,
  });
  ConsultingPackageResponse.fromJson(Map<String, dynamic> json) {
    packages = (json['packages'] != null)
        ? ConsultingPackageResponsePackages.fromJson(json['packages'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (packages != null) {
      data['packages'] = packages!.toJson();
    }
    return data;
  }
}
