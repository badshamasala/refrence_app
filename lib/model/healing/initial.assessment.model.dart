///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class InitialAssessmentAssessmentQuestionsSubjective {
/*
{
  "text": "I’m extremely active",
  "weightage": "100",
  "selected": false,
  "responseText": ""
} 
*/

  String? text;
  String? weightage;
  bool? selected;
  String? responseText;
  String? childId;

  InitialAssessmentAssessmentQuestionsSubjective({
    this.text,
    this.weightage,
    this.selected,
    this.responseText,
    this.childId,
  });
  InitialAssessmentAssessmentQuestionsSubjective.fromJson(
      Map<String, dynamic> json) {
    text = json['text']?.toString();
    weightage = json['weightage']?.toString();
    selected = json['selected'];
    responseText = json['responseText']?.toString();
    childId = json['childId']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['weightage'] = weightage;
    data['selected'] = selected;
    data['responseText'] = responseText;
    data['childId'] = childId;
    return data;
  }
}

class InitialAssessmentAssessmentQuestionsObjectiveUnitsRange {
/*
{
  "min": "0",
  "max": "4",
  "weightage": "13"
} 
*/

  String? min;
  String? max;
  String? weightage;

  InitialAssessmentAssessmentQuestionsObjectiveUnitsRange({
    this.min,
    this.max,
    this.weightage,
  });
  InitialAssessmentAssessmentQuestionsObjectiveUnitsRange.fromJson(
      Map<String, dynamic> json) {
    min = json['min']?.toString();
    max = json['max']?.toString();
    weightage = json['weightage']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['min'] = min;
    data['max'] = max;
    data['weightage'] = weightage;
    return data;
  }
}

class InitialAssessmentAssessmentQuestionsObjectiveUnits {
/*
{
  "lowRange": {
    "min": "0",
    "max": "4",
    "weightage": "13"
  },
  "normalRange": {
    "min": "12",
    "max": "20",
    "weightage": "100"
  },
  "highRange": {
    "min": "5",
    "max": "8",
    "weightage": "50"
  },
  "veryHighRange": {
    "min": "9",
    "max": "12",
    "weightage": "75"
  },
  "unit": "Months",
  "selected": true
} 
*/

  InitialAssessmentAssessmentQuestionsObjectiveUnitsRange? lowRange;
  InitialAssessmentAssessmentQuestionsObjectiveUnitsRange? normalRange;
  InitialAssessmentAssessmentQuestionsObjectiveUnitsRange? highRange;
  InitialAssessmentAssessmentQuestionsObjectiveUnitsRange? veryHighRange;
  String? unit;
  String? measurement;
  String? selectedValue;
  bool? selected;

  InitialAssessmentAssessmentQuestionsObjectiveUnits({
    this.lowRange,
    this.normalRange,
    this.highRange,
    this.veryHighRange,
    this.unit,
    this.measurement,
    this.selectedValue,
    this.selected,
  });
  InitialAssessmentAssessmentQuestionsObjectiveUnits.fromJson(
      Map<String, dynamic> json) {
    lowRange = (json['lowRange'] != null)
        ? InitialAssessmentAssessmentQuestionsObjectiveUnitsRange
            .fromJson(json['lowRange'])
        : null;
    normalRange = (json['normalRange'] != null)
        ? InitialAssessmentAssessmentQuestionsObjectiveUnitsRange
            .fromJson(json['normalRange'])
        : null;
    highRange = (json['highRange'] != null)
        ? InitialAssessmentAssessmentQuestionsObjectiveUnitsRange
            .fromJson(json['highRange'])
        : null;
    veryHighRange = (json['veryHighRange'] != null)
        ? InitialAssessmentAssessmentQuestionsObjectiveUnitsRange
            .fromJson(json['veryHighRange'])
        : null;
    unit = json['unit']?.toString();
    measurement = json['measurement']?.toString();
    selectedValue =
        json['selectedValue'] == null ? "" : json['selectedValue'].toString();
    selected = json['selected'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (lowRange != null) {
      data['lowRange'] = lowRange!.toJson();
    }
    if (normalRange != null) {
      data['normalRange'] = normalRange!.toJson();
    }
    if (highRange != null) {
      data['highRange'] = highRange!.toJson();
    }
    if (veryHighRange != null) {
      data['veryHighRange'] = veryHighRange!.toJson();
    }
    data['unit'] = unit;
    data['measurement'] = measurement;
    data['selected'] = selected;
    data['selectedValue'] = selectedValue ?? "";
    return data;
  }
}

class InitialAssessmentAssessmentQuestionsObjective {
/*
{
  "inputType": "input",
  "answer": "1 Months",
  "units": [
    {
      "lowRange": {
        "min": "0",
        "max": "4",
        "weightage": "13"
      },
      "normalRange": {
        "min": "12",
        "max": "20",
        "weightage": "100"
      },
      "highRange": {
        "min": "5",
        "max": "8",
        "weightage": "50"
      },
      "veryHighRange": {
        "min": "9",
        "max": "12",
        "weightage": "75"
      },
      "unit": "Months",
      "selected": true
    }
  ]
} 
*/

  String? inputType;
  String? answer;
  List<InitialAssessmentAssessmentQuestionsObjectiveUnits?>? units;

  InitialAssessmentAssessmentQuestionsObjective({
    this.inputType,
    this.answer,
    this.units,
  });
  InitialAssessmentAssessmentQuestionsObjective.fromJson(
      Map<String, dynamic> json) {
    inputType = json['inputType']?.toString();
    answer = json['answer']?.toString();
    if (json['units'] != null) {
      final v = json['units'];
      final arr0 =
          <InitialAssessmentAssessmentQuestionsObjectiveUnits>[];
      v.forEach((v) {
        arr0.add(
            InitialAssessmentAssessmentQuestionsObjectiveUnits.fromJson(
                v));
      });
      units = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['inputType'] = inputType;
    data['answer'] = answer;
    if (units != null) {
      final v = units;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['units'] = arr0;
    }
    return data;
  }
}

class InitialAssessmentAssessmentQuestions {
/*
{
  "questionId": "a998d8fc-b4ce-4636-8a16-eaed7c5a74e5",
  "question": "How physically active are you?",
  "priority": 0,
  "assessmentType": "initial assessment",
  "questionType": "subjective assessment",
  "objective": {
    "inputType": "input",
    "answer": "1 Months",
    "units": [
      {
        "lowRange": {
          "min": "0",
          "max": "4",
          "weightage": "13"
        },
        "normalRange": {
          "min": "12",
          "max": "20",
          "weightage": "100"
        },
        "highRange": {
          "min": "5",
          "max": "8",
          "weightage": "50"
        },
        "veryHighRange": {
          "min": "9",
          "max": "12",
          "weightage": "75"
        },
        "unit": "Months",
        "selected": true
      }
    ]
  },
  "subjective": [
    {
      "text": "I’m extremely active",
      "weightage": "100",
      "selected": false,
      "responseText": ""
    }
  ],
  "generalResponse": null,
  "isCompleted": true
} 
*/

  String? questionId;
  String? question;
  String? masterId;
  int? priority;
  String? assessmentType;
  String? questionType;
  InitialAssessmentAssessmentQuestionsObjective? objective;
  List<InitialAssessmentAssessmentQuestionsSubjective?>? subjective;
  String? generalResponse;
  bool? isCompleted;

  InitialAssessmentAssessmentQuestions({
    this.questionId,
    this.question,
    this.masterId,
    this.priority,
    this.assessmentType,
    this.questionType,
    this.objective,
    this.subjective,
    this.generalResponse,
    this.isCompleted,
  });
  InitialAssessmentAssessmentQuestions.fromJson(
      Map<String, dynamic> json) {
    questionId = json['questionId']?.toString();
    question = json['question']?.toString();
    masterId = json['masterId']?.toString();
    priority = json['priority']?.toInt();
    assessmentType = json['assessmentType']?.toString();
    questionType = json['questionType']?.toString();
    objective = (json['objective'] != null)
        ? InitialAssessmentAssessmentQuestionsObjective.fromJson(
            json['objective'])
        : null;
    if (json['subjective'] != null) {
      final v = json['subjective'];
      final arr0 = <InitialAssessmentAssessmentQuestionsSubjective>[];
      v.forEach((v) {
        arr0.add(
            InitialAssessmentAssessmentQuestionsSubjective.fromJson(v));
      });
      subjective = arr0;
    }
    generalResponse = json['generalResponse'] ?? "";
    isCompleted = json['isCompleted'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['questionId'] = questionId;
    data['question'] = question;
    data['masterId'] = masterId;
    data['priority'] = priority;
    data['assessmentType'] = assessmentType;
    data['questionType'] = questionType;
    if (objective != null) {
      data['objective'] = objective!.toJson();
    }
    if (subjective != null) {
      final v = subjective;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['subjective'] = arr0;
    }
    data['generalResponse'] = generalResponse ?? "";
    data['isCompleted'] = isCompleted;
    return data;
  }
}

class InitialAssessmentAssessment {
/*
{
  "categoryId": "1",
  "category": "Anxiety Disorder Care",
  "question": [
    {
      "questionId": "a998d8fc-b4ce-4636-8a16-eaed7c5a74e5",
      "question": "How physically active are you?",
      "priority": 0,
      "assessmentType": "initial assessment",
      "questionType": "subjective assessment",
      "objective": {
        "inputType": "input",
        "answer": "1 Months",
        "units": [
          {
            "lowRange": {
              "min": "0",
              "max": "4",
              "weightage": "13"
            },
            "normalRange": {
              "min": "12",
              "max": "20",
              "weightage": "100"
            },
            "highRange": {
              "min": "5",
              "max": "8",
              "weightage": "50"
            },
            "veryHighRange": {
              "min": "9",
              "max": "12",
              "weightage": "75"
            },
            "unit": "Months",
            "selected": true
          }
        ]
      },
      "subjective": [
        {
          "text": "I’m extremely active",
          "weightage": "100",
          "selected": false,
          "responseText": ""
        }
      ],
      "generalResponse": null,
      "isCompleted": true
    }
  ]
} 
*/

  String? categoryId;
  String? categoryName;
  bool? isCompleted;
  List<InitialAssessmentAssessmentQuestions?>? question;

  InitialAssessmentAssessment(
      {this.categoryId, this.categoryName, this.question, this.isCompleted});
  InitialAssessmentAssessment.fromJson(Map<String, dynamic> json) {
    categoryId = json['categoryId']?.toString();
    categoryName = json['categoryName']?.toString();
    isCompleted = json['isCompleted'];
    if (json['question'] != null) {
      final v = json['question'];
      final arr0 = <InitialAssessmentAssessmentQuestions>[];
      v.forEach((v) {
        arr0.add(InitialAssessmentAssessmentQuestions.fromJson(v));
      });
      question = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['categoryId'] = categoryId;
    data['category'] = categoryName;
    if (question != null) {
      final v = question;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['question'] = arr0;
    }
    data['isCompleted'] = isCompleted;
    return data;
  }
}

class InitialAssessment {
/*
{
  "categories": [
    {
      "categoryId": "1",
      "category": "Anxiety Disorder Care",
      "questions": [
        {
          "questionId": "a998d8fc-b4ce-4636-8a16-eaed7c5a74e5",
          "question": "How physically active are you?",
          "priority": 0,
          "assessmentType": "initial assessment",
          "questionType": "subjective assessment",
          "objective": {
            "inputType": "input",
            "answer": "1 Months",
            "units": [
              {
                "lowRange": {
                  "min": "0",
                  "max": "4",
                  "weightage": "13"
                },
                "normalRange": {
                  "min": "12",
                  "max": "20",
                  "weightage": "100"
                },
                "highRange": {
                  "min": "5",
                  "max": "8",
                  "weightage": "50"
                },
                "veryHighRange": {
                  "min": "9",
                  "max": "12",
                  "weightage": "75"
                },
                "unit": "Months",
                "selected": true
              }
            ]
          },
          "subjective": [
            {
              "text": "I’m extremely active",
              "weightage": "100",
              "selected": false,
              "responseText": ""
            }
          ],
          "generalResponse": null,
          "isCompleted": true
        }
      ],
      "isCompleted": true
    }
  ]
} 
*/

  List<InitialAssessmentAssessment?>? categories;

  InitialAssessment({
    this.categories,
  });
  InitialAssessment.fromJson(Map<String, dynamic> json) {
    if (json['categories'] != null) {
      final v = json['categories'];
      final arr0 = <InitialAssessmentAssessment>[];
      v.forEach((v) {
        arr0.add(InitialAssessmentAssessment.fromJson(v));
      });
      categories = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (categories != null) {
      final v = categories;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['categories'] = arr0;
    }
    return data;
  }
}
