///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class PastLiveEventsModelPastEventsRecording {
/*
{
  "rawUrl": "https://agora-reset-video-recording.s3.ap-south-1.amazonaws.com/production/liveEvents/meditation/83db2610d3a711eda9d0db96769823bf/c638fc4bdb4f270b684f7483c6ece1f2_83db2610-d3a7-11ed-a9d0-db96769823bf.m3u8"
} 
*/

  String? rawUrl;

  PastLiveEventsModelPastEventsRecording({
    this.rawUrl,
  });
  PastLiveEventsModelPastEventsRecording.fromJson(Map<String, dynamic> json) {
    rawUrl = json['rawUrl']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['rawUrl'] = rawUrl;
    return data;
  }
}

class PastLiveEventsModelPastEventsMetaDataTags {
/*
{
  "displayTag": "Fitness",
  "tagId": "0"
} 
*/

  String? displayTag;
  String? tagId;

  PastLiveEventsModelPastEventsMetaDataTags({
    this.displayTag,
    this.tagId,
  });
  PastLiveEventsModelPastEventsMetaDataTags.fromJson(
      Map<String, dynamic> json) {
    displayTag = json['displayTag']?.toString();
    tagId = json['tagId']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['displayTag'] = displayTag;
    data['tagId'] = tagId;
    return data;
  }
}

class PastLiveEventsModelPastEventsMetaData {
/*
{
  "language": "English",
  "isPremium": true,
  "tags": [
    {
      "displayTag": "Fitness",
      "tagId": "0"
    }
  ],
  "attendees": 6,
  "joiners": 6,
  "smileUsers": 1,
  "totalSmiles": 3
} 
*/

  String? language;
  bool? isPremium;
  List<PastLiveEventsModelPastEventsMetaDataTags?>? tags;
  String? attendees;
  String? joiners;
  String? smileUsers;
  String? totalSmiles;
  double? rating;

  PastLiveEventsModelPastEventsMetaData({
    this.language,
    this.isPremium,
    this.tags,
    this.attendees,
    this.joiners,
    this.smileUsers,
    this.totalSmiles,
    this.rating,
  });
  PastLiveEventsModelPastEventsMetaData.fromJson(Map<String, dynamic> json) {
    language = json['language']?.toString();
    isPremium = json['isPremium'];
    if (json['tags'] != null && (json['tags'] is List)) {
      final v = json['tags'];
      final arr0 = <PastLiveEventsModelPastEventsMetaDataTags>[];
      v.forEach((v) {
        arr0.add(PastLiveEventsModelPastEventsMetaDataTags.fromJson(v));
      });
      tags = arr0;
    }
    attendees = json['attendees']?.toString() ?? '';
    joiners = json['joiners']?.toString() ?? '';
    smileUsers = json['smileUsers']?.toString() ?? '';
    totalSmiles = json['totalSmiles']?.toString() ?? '';
    rating = double.tryParse(json['rating']?.toString() ?? '');
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['language'] = language;
    data['isPremium'] = isPremium;
    if (tags != null) {
      final v = tags;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['tags'] = arr0;
    }
    data['attendees'] = attendees;
    data['joiners'] = joiners;
    data['smileUsers'] = smileUsers;
    data['totalSmiles'] = totalSmiles;
    data['rating'] = rating;
    return data;
  }
}

class PastLiveEventsModelPastEventsSchedule {
/*
{
  "scheduleDate": 1681929000000,
  "startTime": 1681954200000,
  "endTime": 1681956900000,
  "timeZone": "Asia/Calcutta",
  "duration": "45 Minutes"
} 
*/

  int? scheduleDate;
  int? startTime;
  int? endTime;
  String? timeZone;
  String? duration;

  PastLiveEventsModelPastEventsSchedule({
    this.scheduleDate,
    this.startTime,
    this.endTime,
    this.timeZone,
    this.duration,
  });
  PastLiveEventsModelPastEventsSchedule.fromJson(Map<String, dynamic> json) {
    scheduleDate = int.tryParse(json['scheduleDate']?.toString() ?? '');
    startTime = int.tryParse(json['startTime']?.toString() ?? '');
    endTime = int.tryParse(json['endTime']?.toString() ?? '');
    timeZone = json['timeZone']?.toString();
    duration = json['duration']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['scheduleDate'] = scheduleDate;
    data['startTime'] = startTime;
    data['endTime'] = endTime;
    data['timeZone'] = timeZone;
    data['duration'] = duration;
    return data;
  }
}

class PastLiveEventsModelPastEventsEventImages {
/*
{
  "portrait": "https://content.aayu.live/aayu/app/event/scheduleimages/dinesh.jpg",
  "landscape": "https://content.aayu.live/aayu/app/event/scheduleimages/dineshlandingpage.jpg",
  "preview": "https://content.aayu.live/aayu/app/event/scheduleimages/dinesh.jpg"
} 
*/

  String? portrait;
  String? landscape;
  String? preview;

  PastLiveEventsModelPastEventsEventImages({
    this.portrait,
    this.landscape,
    this.preview,
  });
  PastLiveEventsModelPastEventsEventImages.fromJson(Map<String, dynamic> json) {
    portrait = json['portrait']?.toString();
    landscape = json['landscape']?.toString();
    preview = json['preview']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['portrait'] = portrait;
    data['landscape'] = landscape;
    data['preview'] = preview;
    return data;
  }
}

class PastLiveEventsModelPastEvents {
/*
{
  "eventTitle": "Discovering Harmony",
  "eventType": "MEDITATION",
  "trainerId": "44604330-866d-11ed-be55-d334c94aac7b",
  "status": "ENDED",
  "eventImages": {
    "portrait": "https://content.aayu.live/aayu/app/event/scheduleimages/dinesh.jpg",
    "landscape": "https://content.aayu.live/aayu/app/event/scheduleimages/dineshlandingpage.jpg",
    "preview": "https://content.aayu.live/aayu/app/event/scheduleimages/dinesh.jpg"
  },
  "schedule": {
    "scheduleDate": 1681929000000,
    "startTime": 1681954200000,
    "endTime": 1681956900000,
    "timeZone": "Asia/Calcutta",
    "duration": "45 Minutes"
  },
  "metaData": {
    "language": "English",
    "isPremium": true,
    "tags": [
      {
        "displayTag": "Fitness",
        "tagId": "0"
      }
    ],
    "attendees": 6,
    "joiners": 6,
    "smileUsers": 1,
    "totalSmiles": 3
  },
  "liveEventId": "f25df4b0-da86-11ed-b579-498619eb3d56",
  "recording": {
    "rawUrl": "https://agora-reset-video-recording.s3.ap-south-1.amazonaws.com/production/liveEvents/meditation/83db2610d3a711eda9d0db96769823bf/c638fc4bdb4f270b684f7483c6ece1f2_83db2610-d3a7-11ed-a9d0-db96769823bf.m3u8"
  }
} 
*/

  String? eventTitle;
  String? eventType;
  String? trainerId;
  String? status;
  PastLiveEventsModelPastEventsEventImages? eventImages;
  PastLiveEventsModelPastEventsSchedule? schedule;
  PastLiveEventsModelPastEventsMetaData? metaData;
  String? liveEventId;
  PastLiveEventsModelPastEventsRecording? recording;

  PastLiveEventsModelPastEvents({
    this.eventTitle,
    this.eventType,
    this.trainerId,
    this.status,
    this.eventImages,
    this.schedule,
    this.metaData,
    this.liveEventId,
    this.recording,
  });
  PastLiveEventsModelPastEvents.fromJson(Map<String, dynamic> json) {
    eventTitle = json['eventTitle']?.toString();
    eventType = json['eventType']?.toString();
    trainerId = json['trainerId']?.toString();
    status = json['status']?.toString();
    eventImages = (json['eventImages'] != null && (json['eventImages'] is Map))
        ? PastLiveEventsModelPastEventsEventImages.fromJson(json['eventImages'])
        : null;
    schedule = (json['schedule'] != null && (json['schedule'] is Map))
        ? PastLiveEventsModelPastEventsSchedule.fromJson(json['schedule'])
        : null;
    metaData = (json['metaData'] != null && (json['metaData'] is Map))
        ? PastLiveEventsModelPastEventsMetaData.fromJson(json['metaData'])
        : null;
    liveEventId = json['liveEventId']?.toString();
    recording = (json['recording'] != null && (json['recording'] is Map))
        ? PastLiveEventsModelPastEventsRecording.fromJson(json['recording'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['eventTitle'] = eventTitle;
    data['eventType'] = eventType;
    data['trainerId'] = trainerId;
    data['status'] = status;
    if (eventImages != null) {
      data['eventImages'] = eventImages!.toJson();
    }
    if (schedule != null) {
      data['schedule'] = schedule!.toJson();
    }
    if (metaData != null) {
      data['metaData'] = metaData!.toJson();
    }
    data['liveEventId'] = liveEventId;
    if (recording != null) {
      data['recording'] = recording!.toJson();
    }
    return data;
  }
}

class PastLiveEventsModelTrainerDetails {
/*
{
  "trainerId": "44604330-866d-11ed-be55-d334c94aac7b",
  "name": "Dinesh Manchanda",
  "gender": "Male",
  "photo": "",
  "bio": "An apparel designer by profession, currently working for raymond. I got in to practicing meditation through a series of spiritual events which helped me understand the human inner mechanisms like never before. I’m now a Rajyoga Meditation teacher, associated with the BrahmaKumaris. An Institutor of an online spiritual learning platform called ‘Befikar Patang’. Happiness content creator on my Instagram @the.happiness.movement and a post grad final year student of ‘Counselling and hypnotherapy’.",
  "profession": [
    "Artist"
  ],
  "speciality": [
    "Counseling"
  ]
} 
*/

  String? trainerId;
  String? name;
  String? gender;
  String? photo;
  String? bio;
  List<String?>? profession;
  List<String?>? speciality;

  PastLiveEventsModelTrainerDetails({
    this.trainerId,
    this.name,
    this.gender,
    this.photo,
    this.bio,
    this.profession,
    this.speciality,
  });
  PastLiveEventsModelTrainerDetails.fromJson(Map<String, dynamic> json) {
    trainerId = json['trainerId']?.toString();
    name = json['name']?.toString();
    gender = json['gender']?.toString();
    photo = json['photo']?.toString();
    bio = json['bio']?.toString();
    if (json['profession'] != null && (json['profession'] is List)) {
      final v = json['profession'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      profession = arr0;
    }
    if (json['speciality'] != null && (json['speciality'] is List)) {
      final v = json['speciality'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      speciality = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trainerId'] = trainerId;
    data['name'] = name;
    data['gender'] = gender;
    data['photo'] = photo;
    data['bio'] = bio;
    if (profession != null) {
      final v = profession;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['profession'] = arr0;
    }
    if (speciality != null) {
      final v = speciality;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['speciality'] = arr0;
    }
    return data;
  }
}

class PastLiveEventsModel {
/*
{
  "trainerDetails": {
    "trainerId": "44604330-866d-11ed-be55-d334c94aac7b",
    "name": "Dinesh Manchanda",
    "gender": "Male",
    "photo": "",
    "bio": "An apparel designer by profession, currently working for raymond. I got in to practicing meditation through a series of spiritual events which helped me understand the human inner mechanisms like never before. I’m now a Rajyoga Meditation teacher, associated with the BrahmaKumaris. An Institutor of an online spiritual learning platform called ‘Befikar Patang’. Happiness content creator on my Instagram @the.happiness.movement and a post grad final year student of ‘Counselling and hypnotherapy’.",
    "profession": [
      "Artist"
    ],
    "speciality": [
      "Counseling"
    ]
  },
  "pastEvents": [
    {
      "eventTitle": "Discovering Harmony",
      "eventType": "MEDITATION",
      "trainerId": "44604330-866d-11ed-be55-d334c94aac7b",
      "status": "ENDED",
      "eventImages": {
        "portrait": "https://content.aayu.live/aayu/app/event/scheduleimages/dinesh.jpg",
        "landscape": "https://content.aayu.live/aayu/app/event/scheduleimages/dineshlandingpage.jpg",
        "preview": "https://content.aayu.live/aayu/app/event/scheduleimages/dinesh.jpg"
      },
      "schedule": {
        "scheduleDate": 1681929000000,
        "startTime": 1681954200000,
        "endTime": 1681956900000,
        "timeZone": "Asia/Calcutta",
        "duration": "45 Minutes"
      },
      "metaData": {
        "language": "English",
        "isPremium": true,
        "tags": [
          {
            "displayTag": "Fitness",
            "tagId": "0"
          }
        ],
        "attendees": 6,
        "joiners": 6,
        "smileUsers": 1,
        "totalSmiles": 3
      },
      "liveEventId": "f25df4b0-da86-11ed-b579-498619eb3d56",
      "recording": {
        "rawUrl": "https://agora-reset-video-recording.s3.ap-south-1.amazonaws.com/production/liveEvents/meditation/83db2610d3a711eda9d0db96769823bf/c638fc4bdb4f270b684f7483c6ece1f2_83db2610-d3a7-11ed-a9d0-db96769823bf.m3u8"
      }
    }
  ]
} 
*/

  PastLiveEventsModelTrainerDetails? trainerDetails;
  List<PastLiveEventsModelPastEvents?>? pastEvents;

  PastLiveEventsModel({
    this.trainerDetails,
    this.pastEvents,
  });
  PastLiveEventsModel.fromJson(Map<String, dynamic> json) {
    trainerDetails =
        (json['trainerDetails'] != null && (json['trainerDetails'] is Map))
            ? PastLiveEventsModelTrainerDetails.fromJson(json['trainerDetails'])
            : null;
    if (json['pastEvents'] != null && (json['pastEvents'] is List)) {
      final v = json['pastEvents'];
      final arr0 = <PastLiveEventsModelPastEvents>[];
      v.forEach((v) {
        arr0.add(PastLiveEventsModelPastEvents.fromJson(v));
      });
      pastEvents = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (trainerDetails != null) {
      data['trainerDetails'] = trainerDetails!.toJson();
    }
    if (pastEvents != null) {
      final v = pastEvents;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['pastEvents'] = arr0;
    }
    return data;
  }
}
