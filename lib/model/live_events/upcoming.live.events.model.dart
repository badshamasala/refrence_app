///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class UpcomingLiveEventsModelUpcomingEventsTrainer {
/*
{
  "trainerId": "8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e",
  "name": "Dr. Aayu Expert",
  "gender": "Male",
  "photo": "https://resetcontent.s3.amazonaws.com/trainerprofile/8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e/image_cropper_1668583618873.jpg"
} 
*/

  String? trainerId;
  String? name;
  String? gender;
  String? photo;

  UpcomingLiveEventsModelUpcomingEventsTrainer({
    this.trainerId,
    this.name,
    this.gender,
    this.photo,
  });
  UpcomingLiveEventsModelUpcomingEventsTrainer.fromJson(
      Map<String, dynamic> json) {
    trainerId = json['trainerId']?.toString();
    name = json['name']?.toString();
    gender = json['gender']?.toString();
    photo = json['photo']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trainerId'] = trainerId;
    data['name'] = name;
    data['gender'] = gender;
    data['photo'] = photo;
    return data;
  }
}

class UpcomingLiveEventsModelUpcomingEventsMetaData {
/*
{
  "language": "English",
  "isPremium": false
} 
*/

  String? language;
  bool? isPremium;

  UpcomingLiveEventsModelUpcomingEventsMetaData({
    this.language,
    this.isPremium,
  });
  UpcomingLiveEventsModelUpcomingEventsMetaData.fromJson(
      Map<String, dynamic> json) {
    language = json['language']?.toString();
    isPremium = json['isPremium'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['language'] = language;
    data['isPremium'] = isPremium;
    return data;
  }
}

class UpcomingLiveEventsModelUpcomingEventsScheduleEpochTime {
/*
{
  "scheduleDate": 1669780800000,
  "startTime": 1669818600000,
  "endTime": 1669820400000,
  "timeZone": "Canada/Atlantic"
} 
*/

  int? scheduleDate;
  int? startTime;
  int? endTime;
  String? timeZone;

  UpcomingLiveEventsModelUpcomingEventsScheduleEpochTime({
    this.scheduleDate,
    this.startTime,
    this.endTime,
    this.timeZone,
  });
  UpcomingLiveEventsModelUpcomingEventsScheduleEpochTime.fromJson(
      Map<String, dynamic> json) {
    scheduleDate = json['scheduleDate']?.toInt();
    startTime = json['startTime']?.toInt();
    endTime = json['endTime']?.toInt();
    timeZone = json['timeZone']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['scheduleDate'] = scheduleDate;
    data['startTime'] = startTime;
    data['endTime'] = endTime;
    data['timeZone'] = timeZone;
    return data;
  }
}

class UpcomingLiveEventsModelUpcomingEventsSchedule {
/*
{
  "scheduleDate": "2022-11-30",
  "startTime": "2022-11-30T14:30:00.000Z",
  "endTime": "2022-11-30T15:00:00.000Z",
  "secondsRemaining": 17180,
  "duration": "30 Minutes",
  "epochTime": {
    "scheduleDate": 1669780800000,
    "startTime": 1669818600000,
    "endTime": 1669820400000,
    "timeZone": "Canada/Atlantic"
  }
} 
*/

  String? scheduleDate;
  String? startTime;
  String? endTime;
  int? secondsRemaining;
  String? duration;
  UpcomingLiveEventsModelUpcomingEventsScheduleEpochTime? epochTime;

  UpcomingLiveEventsModelUpcomingEventsSchedule({
    this.scheduleDate,
    this.startTime,
    this.endTime,
    this.secondsRemaining,
    this.duration,
    this.epochTime,
  });
  UpcomingLiveEventsModelUpcomingEventsSchedule.fromJson(
      Map<String, dynamic> json) {
    scheduleDate = json['scheduleDate']?.toString();
    startTime = json['startTime']?.toString();
    endTime = json['endTime']?.toString();
    secondsRemaining = json['secondsRemaining']?.toInt();
    duration = json['duration']?.toString();
    epochTime = (json['epochTime'] != null)
        ? UpcomingLiveEventsModelUpcomingEventsScheduleEpochTime.fromJson(
            json['epochTime'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['scheduleDate'] = scheduleDate;
    data['startTime'] = startTime;
    data['endTime'] = endTime;
    data['secondsRemaining'] = secondsRemaining;
    data['duration'] = duration;
    if (epochTime != null) {
      data['epochTime'] = epochTime!.toJson();
    }
    return data;
  }
}

class UpcomingLiveEventsModelUpcomingEventsEventImages {
/*
{
  "portrait": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg",
  "landscape": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg",
  "preview": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg"
} 
*/

  String? portrait;
  String? landscape;
  String? preview;

  UpcomingLiveEventsModelUpcomingEventsEventImages({
    this.portrait,
    this.landscape,
    this.preview,
  });
  UpcomingLiveEventsModelUpcomingEventsEventImages.fromJson(
      Map<String, dynamic> json) {
    portrait = json['portrait']?.toString();
    landscape = json['landscape']?.toString();
    preview = json['preview']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['portrait'] = portrait;
    data['landscape'] = landscape;
    data['preview'] = preview;
    return data;
  }
}

class UpcomingLiveEventsModelUpcomingEvents {
/*
{
  "eventTitle": "Test Canada Time",
  "eventType": "SPECIFIC YOGA",
  "trainerId": "8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e",
  "status": "ACTIVE",
  "eventImages": {
    "portrait": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg",
    "landscape": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg",
    "preview": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg"
  },
  "schedule": {
    "scheduleDate": "2022-11-30",
    "startTime": "2022-11-30T14:30:00.000Z",
    "endTime": "2022-11-30T15:00:00.000Z",
    "secondsRemaining": 17180,
    "duration": "30 Minutes",
    "epochTime": {
      "scheduleDate": 1669780800000,
      "startTime": 1669818600000,
      "endTime": 1669820400000,
      "timeZone": "Canada/Atlantic"
    }
  },
  "metaData": {
    "language": "English",
    "isPremium": false
  },
  "liveEventId": "343b0c50-706b-11ed-9e6f-1d31db83edde",
  "trainer": {
    "trainerId": "8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e",
    "name": "Dr. Aayu Expert",
    "gender": "Male",
    "photo": "https://resetcontent.s3.amazonaws.com/trainerprofile/8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e/image_cropper_1668583618873.jpg"
  }
} 
*/

  String? eventTitle;
  String? eventType;
  String? trainerId;
  String? status;
  UpcomingLiveEventsModelUpcomingEventsEventImages? eventImages;
  UpcomingLiveEventsModelUpcomingEventsSchedule? schedule;
  UpcomingLiveEventsModelUpcomingEventsMetaData? metaData;
  String? liveEventId;
  UpcomingLiveEventsModelUpcomingEventsTrainer? trainer;
  bool? isAttending;

  UpcomingLiveEventsModelUpcomingEvents({
    this.eventTitle,
    this.eventType,
    this.trainerId,
    this.status,
    this.eventImages,
    this.schedule,
    this.metaData,
    this.liveEventId,
    this.trainer,
    this.isAttending,
  });
  UpcomingLiveEventsModelUpcomingEvents.fromJson(Map<String, dynamic> json) {
    eventTitle = json['eventTitle']?.toString();
    eventType = json['eventType']?.toString();
    trainerId = json['trainerId']?.toString();
    status = json['status']?.toString();
    eventImages = (json['eventImages'] != null)
        ? UpcomingLiveEventsModelUpcomingEventsEventImages.fromJson(
            json['eventImages'])
        : null;
    schedule = (json['schedule'] != null)
        ? UpcomingLiveEventsModelUpcomingEventsSchedule.fromJson(
            json['schedule'])
        : null;
    metaData = (json['metaData'] != null)
        ? UpcomingLiveEventsModelUpcomingEventsMetaData.fromJson(
            json['metaData'])
        : null;
    liveEventId = json['liveEventId']?.toString();
    trainer = (json['trainer'] != null)
        ? UpcomingLiveEventsModelUpcomingEventsTrainer.fromJson(json['trainer'])
        : null;
    isAttending = json['isAttending'] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['eventTitle'] = eventTitle;
    data['eventType'] = eventType;
    data['trainerId'] = trainerId;
    data['status'] = status;
    if (eventImages != null) {
      data['eventImages'] = eventImages!.toJson();
    }
    if (schedule != null) {
      data['schedule'] = schedule!.toJson();
    }
    if (metaData != null) {
      data['metaData'] = metaData!.toJson();
    }
    data['liveEventId'] = liveEventId;
    if (trainer != null) {
      data['trainer'] = trainer!.toJson();
    }
    isAttending = isAttending ?? false;
    return data;
  }
}

class UpcomingLiveEventsModel {
/*
{
  "upcomingEvents": [
    {
      "eventTitle": "Test Canada Time",
      "eventType": "SPECIFIC YOGA",
      "trainerId": "8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e",
      "status": "ACTIVE",
      "eventImages": {
        "portrait": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg",
        "landscape": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg",
        "preview": "https://content.aayu.live/aayu/app/event/thumb211022/04specificyoga.jpg"
      },
      "schedule": {
        "scheduleDate": "2022-11-30",
        "startTime": "2022-11-30T14:30:00.000Z",
        "endTime": "2022-11-30T15:00:00.000Z",
        "secondsRemaining": 17180,
        "duration": "30 Minutes",
        "epochTime": {
          "scheduleDate": 1669780800000,
          "startTime": 1669818600000,
          "endTime": 1669820400000,
          "timeZone": "Canada/Atlantic"
        }
      },
      "metaData": {
        "language": "English",
        "isPremium": false
      },
      "liveEventId": "343b0c50-706b-11ed-9e6f-1d31db83edde",
      "trainer": {
        "trainerId": "8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e",
        "name": "Dr. Aayu Expert",
        "gender": "Male",
        "photo": "https://resetcontent.s3.amazonaws.com/trainerprofile/8ddc36d0-fd16-11ec-86fd-5bbfc80ca82e/image_cropper_1668583618873.jpg"
      }
    }
  ]
} 
*/

  List<UpcomingLiveEventsModelUpcomingEvents?>? upcomingEvents;

  UpcomingLiveEventsModel({
    this.upcomingEvents,
  });
  UpcomingLiveEventsModel.fromJson(Map<String, dynamic> json) {
    if (json['upcomingEvents'] != null) {
      final v = json['upcomingEvents'];
      final arr0 = <UpcomingLiveEventsModelUpcomingEvents>[];
      v.forEach((v) {
        arr0.add(UpcomingLiveEventsModelUpcomingEvents.fromJson(v));
      });
      upcomingEvents = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (upcomingEvents != null) {
      final v = upcomingEvents;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['upcomingEvents'] = arr0;
    }
    return data;
  }
}
