///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ContentMetaDataTags {
/*
{
  "displayTagId": "1",
  "displayTag": "Mindfulness"
} 
*/

  String? displayTagId;
  String? displayTag;

  ContentMetaDataTags({
    this.displayTagId,
    this.displayTag,
  });
  ContentMetaDataTags.fromJson(Map<String, dynamic> json) {
    displayTagId = json['displayTagId']?.toString();
    displayTag = json['displayTag']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['displayTagId'] = displayTagId;
    data['displayTag'] = displayTag;
    return data;
  }
}

class ContentMetaData {
/*
{
  "duration": "10",
  "rating": 4.4,
  "views": "5k",
  "language":"",
  "multiSeries": false,
  "tags": [
    {
      "displayTagId": "1",
      "displayTag": "Mindfulness"
    }
  ]
} 
*/

  String? duration;
  double? rating;
  String? views;
  String? language;
  bool? multiSeries;
  List<ContentMetaDataTags?>? tags;
  String? contentTag;
  bool? isPremium;

  ContentMetaData({
    this.duration,
    this.rating,
    this.views,
    this.language,
    this.multiSeries,
    this.tags,
    this.contentTag,
    this.isPremium,
  });
  ContentMetaData.fromJson(Map<String, dynamic> json) {
    duration = json['duration']?.toString();
    rating = json['rating']?.toDouble() ?? 4.4;
    views = json['views']?.toString();
    language = json['language']?.toString();
    multiSeries = json['multiSeries'];
    if (json['tags'] != null) {
      final v = json['tags'];
      final arr0 = <ContentMetaDataTags>[];
      v.forEach((v) {
        arr0.add(ContentMetaDataTags.fromJson(v));
      });
      tags = arr0;
    }
    contentTag = json['contentTag']?.toString();
    isPremium = json['isPremium'] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['duration'] = duration;
    data['rating'] = rating ?? 4.4;
    data['views'] = views;
    data['language'] = language;
    data['multiSeries'] = multiSeries;
    if (tags != null) {
      final v = tags;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['tags'] = arr0;
    }
    data['contentTag'] = contentTag ?? "";
    data['isPremium'] = isPremium ?? false;
    return data;
  }
}

class ContentArtist {
/*
{
  "artistId": "623c63-79af00707-3b0783br2",
  "artistName": "Rev. Bibiladeniye Mahanama",
  "artistImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/artistimages/images3x/RevBibiladeniyeMahanama.png"
} 
*/

  String? artistId;
  String? artistName;
  String? artistImage;
  String? followers;
  bool? isFollowed;

  ContentArtist({
    this.artistId,
    this.artistName,
    this.artistImage,
    this.followers,
    this.isFollowed,
  });
  ContentArtist.fromJson(Map<String, dynamic> json) {
    artistId = json['artistId']?.toString();
    artistName = json['artistName']?.toString();
    artistImage = json['artistImage']?.toString();
    followers = json['followers']?.toString();
    isFollowed = json['isFollowed'] ?? false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['artistId'] = artistId;
    data['artistName'] = artistName;
    data['artistImage'] = artistImage;
    data['followers'] = followers;
    data['isFollowed'] = isFollowed ?? false;
    return data;
  }
}

class ContentCategories {
/*
{
  "categoryId": "f6433420-b49c-11ec-8ac9-09b66aef4a95",
  "categoryName": "SubCategory2",
  "showMore": true,
  "bgColor": "#FFFFFF",
  "medaDataBgColor": "#F1F1F1",
  "content": [
    {
      "contentId": "c1e7a265-db51-4df5-afe1-32e7c2d46ef8",
      "contentName": "Cultivating Mindfulness",
      "contentImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness_966x543.jpg",
      "contentPath": "https://resetcontent.s3.ap-south-1.amazonaws.comhttps://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness.mp3",
      "playBGImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness_1125x2436.jpg",
      "favourite": false,
      "artist": {
        "artistId": "623c63-79af00707-3b0783br2",
        "artistName": "Rev. Bibiladeniye Mahanama",
        "artistImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/artistimages/images3x/RevBibiladeniyeMahanama.png"
      },
      "metaData": {
        "duration": "10",
        "rating": 4.4,
        "views": "5k",
        "multiSeries": false,
        "tags": [
          {
            "displayTagId": "1",
            "displayTag": "Mindfulness"
          }
        ]
      }
    }
  ]
} 
*/

  String? categoryId;
  String? categoryName;
  bool? showMore;
  String? bgColor;
  String? medaDataBgColor;
  List<Content?>? content;

  ContentCategories({
    this.categoryId,
    this.categoryName,
    this.showMore,
    this.bgColor,
    this.medaDataBgColor,
    this.content,
  });
  ContentCategories.fromJson(Map<String, dynamic> json) {
    categoryId = json['categoryId']?.toString();
    categoryName = json['categoryName']?.toString();
    showMore = json['showMore'];
    bgColor = json['bgColor']?.toString();
    medaDataBgColor = json['medaDataBgColor']?.toString();
    if (json['content'] != null) {
      final v = json['content'];
      final arr0 = <Content>[];
      v.forEach((v) {
        arr0.add(Content.fromJson(v));
      });
      content = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['categoryId'] = categoryId;
    data['categoryName'] = categoryName;
    data['showMore'] = showMore;
    data['bgColor'] = bgColor;
    data['medaDataBgColor'] = medaDataBgColor;
    if (content != null) {
      final v = content;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['content'] = arr0;
    }
    return data;
  }
}

class Content {
/*
{
  "contentId": "ede9c55a-b21a-40bc-88cd-32f0a3e3e94c",
  "contentName": "Affectionate Breathing - Self Love Meditation",
  "contentImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation_966x543.jpg",
  "contentType": "Audio",
  "contentDesc": "",
  "contentPath": "https://resetcontent.s3.ap-south-1.amazonaws.comhttps://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation.mp3",
  "playBGImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation_1125x2436.jpg",
  "isFavourite": false,
  "artist": {
    "artistId": "623c63-79af00707-3b0782br0",
    "artistName": "Cara Pereira",
    "artistImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/artistimages/images3x/CaraPereira.png"
  },
  "metaData": {
    "duration": "9",
    "rating": 4.4,
    "views": "5k",
    "language": "English",
    "multiSeries": false,
    "tags": [
      {
        "displayTagId": "1",
        "displayTag": "Mindfulness"
      }
    ]
  }
} 
*/

  String? contentId;
  String? contentName;
  String? contentImage;
  String? contentType;
  String? contentDesc;
  String? contentPath;
  String? playBGImage;
  bool? isFavourite;
  ContentArtist? artist;
  ContentMetaData? metaData;

  Content({
    this.contentId,
    this.contentName,
    this.contentImage,
    this.contentType,
    this.contentDesc,
    this.contentPath,
    this.playBGImage,
    this.isFavourite,
    this.artist,
    this.metaData,
  });
  Content.fromJson(Map<String, dynamic> json) {
    contentId = json['contentId']?.toString();
    contentName = json['contentName']?.toString();
    contentImage = json['contentImage']?.toString();
    contentType = json['contentType']?.toString();
    contentDesc = json['contentDesc']?.toString();
    contentPath = json['contentPath']?.toString();
    playBGImage = json['playBGImage']?.toString();
    isFavourite = json['isFavourite'] ?? false;
    artist = (json['artist'] != null)
        ? ContentArtist.fromJson(json['artist'])
        : null;
    metaData = (json['metaData'] != null)
        ? ContentMetaData.fromJson(json['metaData'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['contentId'] = contentId;
    data['contentName'] = contentName;
    data['contentImage'] = contentImage;
    data['contentType'] = contentType;
    data['contentDesc'] = contentDesc;
    data['contentPath'] = contentPath;
    data['playBGImage'] = playBGImage;
    data['isFavourite'] = isFavourite ?? false;
    if (artist != null) {
      data['artist'] = artist!.toJson();
    }
    if (metaData != null) {
      data['metaData'] = metaData!.toJson();
    }
    return data;
  }
}

class GrowPageContentResponseDetails {
/*
{
  "categoryId": "083048d0-b49d-11ec-8ac9-09b66aef4a95",
  "categoryName": "Meditation",
  "displayType": "Category",
  "content": [
    {
      "contentId": "ede9c55a-b21a-40bc-88cd-32f0a3e3e94c",
      "contentName": "Affectionate Breathing - Self Love Meditation",
      "contentImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation_966x543.jpg",
      "contentType": "Audio",
      "contentPath": "https://resetcontent.s3.ap-south-1.amazonaws.comhttps://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation.mp3",
      "playBGImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation_1125x2436.jpg",
      "favourite": false,
      "artist": {
        "artistId": "623c63-79af00707-3b0782br0",
        "artistName": "Cara Pereira",
        "artistImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/artistimages/images3x/CaraPereira.png"
      },
      "metaData": {
        "duration": "9",
        "rating": 4.4,
        "views": "5k",
        "language": "English",
        "multiSeries": false,
        "tags": [
          {
            "displayTagId": "1",
            "displayTag": "Mindfulness"
          }
        ]
      }
    }
  ],
  "categories": [
    {
      "categoryId": "f6433420-b49c-11ec-8ac9-09b66aef4a95",
      "categoryName": "SubCategory2",
      "showMore": true,
      "bgColor": "#FFFFFF",
      "medaDataBgColor": "#F1F1F1",
      "content": [
        {
          "contentId": "c1e7a265-db51-4df5-afe1-32e7c2d46ef8",
          "contentName": "Cultivating Mindfulness",
          "contentImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness_966x543.jpg",
          "contentPath": "https://resetcontent.s3.ap-south-1.amazonaws.comhttps://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness.mp3",
          "playBGImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness_1125x2436.jpg",
          "favourite": false,
          "artist": {
            "artistId": "623c63-79af00707-3b0783br2",
            "artistName": "Rev. Bibiladeniye Mahanama",
            "artistImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/artistimages/images3x/RevBibiladeniyeMahanama.png"
          },
          "metaData": {
            "duration": "10",
            "rating": 4.4,
            "views": "5k",
            "multiSeries": false,
            "tags": [
              {
                "displayTagId": "1",
                "displayTag": "Mindfulness"
              }
            ]
          }
        }
      ]
    }
  ]
} 
*/

  String? categoryId;
  String? categoryName;
  String? displayType;
  List<Content?>? content;
  List<ContentCategories?>? categories;

  GrowPageContentResponseDetails({
    this.categoryId,
    this.categoryName,
    this.displayType,
    this.content,
    this.categories,
  });
  GrowPageContentResponseDetails.fromJson(Map<String, dynamic> json) {
    categoryId = json['categoryId']?.toString();
    categoryName = json['categoryName']?.toString();
    displayType = json['displayType']?.toString();
    if (json['content'] != null) {
      final v = json['content'];
      final arr0 = <Content>[];
      v.forEach((v) {
        arr0.add(Content.fromJson(v));
      });
      content = arr0;
    }
    if (json['categories'] != null) {
      final v = json['categories'];
      final arr0 = <ContentCategories>[];
      v.forEach((v) {
        arr0.add(ContentCategories.fromJson(v));
      });
      categories = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['categoryId'] = categoryId;
    data['categoryName'] = categoryName;
    data['displayType'] = displayType;
    if (content != null) {
      final v = content;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['content'] = arr0;
    }
    if (categories != null) {
      final v = categories;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['categories'] = arr0;
    }
    return data;
  }
}

class GrowPageContentResponse {
/*
{
  "details": {
    "categoryId": "083048d0-b49d-11ec-8ac9-09b66aef4a95",
    "categoryName": "Meditation",
    "displayType": "Category",
    "content": [
      {
        "contentId": "ede9c55a-b21a-40bc-88cd-32f0a3e3e94c",
        "contentName": "Affectionate Breathing - Self Love Meditation",
        "contentImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation_966x543.jpg",
        "contentType": "Audio",
        "contentPath": "https://resetcontent.s3.ap-south-1.amazonaws.comhttps://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation.mp3",
        "playBGImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Relationship/finalcontent/AffectionateBreathingSelfLoveMeditation/AffectionateBreathingSelfLoveMeditation_1125x2436.jpg",
        "favourite": false,
        "artist": {
          "artistId": "623c63-79af00707-3b0782br0",
          "artistName": "Cara Pereira",
          "artistImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/artistimages/images3x/CaraPereira.png"
        },
        "metaData": {
          "duration": "9",
          "rating": 4.4,
          "views": "5k",
          "language": "English",
          "multiSeries": false,
          "tags": [
            {
              "displayTagId": "1",
              "displayTag": "Mindfulness"
            }
          ]
        }
      }
    ],
    "categories": [
      {
        "categoryId": "f6433420-b49c-11ec-8ac9-09b66aef4a95",
        "categoryName": "SubCategory2",
        "showMore": true,
        "bgColor": "#FFFFFF",
        "medaDataBgColor": "#F1F1F1",
        "content": [
          {
            "contentId": "c1e7a265-db51-4df5-afe1-32e7c2d46ef8",
            "contentName": "Cultivating Mindfulness",
            "contentImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness_966x543.jpg",
            "contentPath": "https://resetcontent.s3.ap-south-1.amazonaws.comhttps://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness.mp3",
            "playBGImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/Audio/300322/CultivatingMindfulness/CultivatingMindfulness_1125x2436.jpg",
            "favourite": false,
            "artist": {
              "artistId": "623c63-79af00707-3b0783br2",
              "artistName": "Rev. Bibiladeniye Mahanama",
              "artistImage": "https://resetcontent.s3.ap-south-1.amazonaws.com/Meditations/artistimages/images3x/RevBibiladeniyeMahanama.png"
            },
            "metaData": {
              "duration": "10",
              "rating": 4.4,
              "views": "5k",
              "multiSeries": false,
              "tags": [
                {
                  "displayTagId": "1",
                  "displayTag": "Mindfulness"
                }
              ]
            }
          }
        ]
      }
    ]
  }
} 
*/

  GrowPageContentResponseDetails? details;

  GrowPageContentResponse({
    this.details,
  });
  GrowPageContentResponse.fromJson(Map<String, dynamic> json) {
    details = (json['details'] != null)
        ? GrowPageContentResponseDetails.fromJson(json['details'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (details != null) {
      data['details'] = details!.toJson();
    }
    return data;
  }
}
